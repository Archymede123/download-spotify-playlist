{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js\";\n//packages\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; // components \n\nimport Homepage from './Homepage';\nimport LoginPage from './LoginPage';\nimport PlaylistPage from './PlaylistPage'; // css\n\nimport '../css/App.css'; // import querystring from 'query-string';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadSpotifyData = function (data) {\n      _this.setState({\n        playlists: data.playlists,\n        user: data.user,\n        access_token: data.access_token\n      });\n    };\n\n    _this.addTag = function (index, tag) {\n      var playlists = _this.state.playlists;\n      playlists[index].tags ? playlists[index].tags.push(tag) : playlists[index].tags = [tag];\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.addPlaylistRating = function (index, rating) {\n      var playlists = _this.state.playlists;\n      playlists.find(function (playlist) {\n        return playlist.index === index;\n      }).rating = rating;\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var localStorageUserRef = localStorage.getItem('user');\n\n      if (localStorageUserRef) {\n        this.setState({\n          user: JSON.parse(localStorageUserRef)\n        });\n      }\n\n      var localStoragePlaylistsRef = localStorage.getItem('playlists');\n\n      if (localStoragePlaylistsRef) {\n        this.setState({\n          playlists: JSON.parse(localStoragePlaylistsRef)\n        });\n      }\n\n      var localStorageTokenRef = localStorage.getItem('access_token');\n\n      if (localStorageTokenRef) {\n        this.setState({\n          access_token: JSON.parse(localStorageTokenRef)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(\"user\", JSON.stringify(this.state.user));\n      localStorage.setItem(\"playlists\", JSON.stringify(this.state.playlists));\n      localStorage.setItem(\"access_token\", JSON.stringify(this.state.access_token));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.access_token);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(Homepage, Object.assign({}, props, {\n            data: _this2.state,\n            addTag: _this2.addTag,\n            addPlaylistRating: _this2.addPlaylistRating,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/:playlistId\",\n        render: function render(props) {\n          return React.createElement(PlaylistPage, Object.assign({}, props, {\n            playlists: _this2.state.playlists,\n            access_token: _this2.state.access_token,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })))) : React.createElement(LoginPage, {\n        loadSpotifyData: this.loadSpotifyData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Homepage","LoginPage","PlaylistPage","App","loadSpotifyData","data","setState","playlists","user","access_token","addTag","index","tag","state","tags","push","addPlaylistRating","rating","find","playlist","localStorageUserRef","localStorage","getItem","JSON","parse","localStoragePlaylistsRef","localStorageTokenRef","setItem","stringify","console","log","props"],"mappings":"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","sourcesContent":["//packages\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// components \nimport Homepage from './Homepage'\nimport LoginPage from './LoginPage';\nimport PlaylistPage from './PlaylistPage';\n\n// css\nimport '../css/App.css';\n\n// import querystring from 'query-string';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n\n  loadSpotifyData = (data) => {\n    this.setState({\n      playlists: data.playlists,\n      user: data.user,\n      access_token: data.access_token\n    })\n  }\n\n  addTag = (index, tag) => {\n    let playlists = this.state.playlists\n    playlists[index].tags ? playlists[index].tags.push(tag)\n      : playlists[index].tags = [tag]\n    this.setState({ playlists })\n  }\n\n  addPlaylistRating = (index, rating) => {\n    let playlists = this.state.playlists\n    playlists.find(playlist => playlist.index === index).rating = rating\n    this.setState({ playlists })\n  }\n\n  componentDidMount() {\n    const localStorageUserRef = localStorage.getItem('user')\n    if (localStorageUserRef) {\n      this.setState({ user: JSON.parse(localStorageUserRef) })\n    }\n\n    const localStoragePlaylistsRef = localStorage.getItem('playlists')\n    if (localStoragePlaylistsRef) {\n      this.setState({ playlists: JSON.parse(localStoragePlaylistsRef) })\n    }\n\n    const localStorageTokenRef = localStorage.getItem('access_token')\n    if (localStorageTokenRef) {\n      this.setState({ access_token: JSON.parse(localStorageTokenRef) })\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      \"user\",\n      JSON.stringify(this.state.user))\n\n    localStorage.setItem(\n      \"playlists\",\n      JSON.stringify(this.state.playlists))\n\n    localStorage.setItem(\n      \"access_token\",\n      JSON.stringify(this.state.access_token))\n  }\n\n  render() {\n    console.log(this.state.access_token)\n    return (\n      <div className=\"App\">\n        {this.state.user ?\n          <div>\n            <BrowserRouter>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={(props) => <Homepage {...props}\n                    data={this.state}\n                    addTag={this.addTag}\n                    addPlaylistRating={this.addPlaylistRating}\n                  />}\n                />\n                <Route\n                  exact\n                  path=\"/:playlistId\"\n                  render={(props) => <PlaylistPage {...props}\n                    playlists={this.state.playlists}\n                    access_token={this.state.access_token}\n                  />}\n                />\n              </Switch>\n            </BrowserRouter>\n          </div> : <LoginPage loadSpotifyData={this.loadSpotifyData} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}