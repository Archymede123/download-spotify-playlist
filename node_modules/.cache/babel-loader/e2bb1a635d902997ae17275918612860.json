{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js\";\n//packages\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; // components \n\nimport PlaylistsListing from './PlaylistsListing';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport LoginPage from './LoginPage';\nimport PlaylistPage from './PlaylistPage'; // js \n\nimport { fetchPlaylistInfos, fetchPlaylistData } from '../api/fetchData'; // css\n\nimport '../css/App.css'; // import querystring from 'query-string';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadSpotifyData = function (data) {\n      _this.setState({\n        playlists: data.playlists,\n        user: data.user\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.addTag = function (index, tag) {\n      var playlists = _this.state.playlists;\n      playlists[index].tags ? playlists[index].tags.push(tag) : playlists[index].tags = [tag];\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.addPlaylistRating = function (index, rating) {\n      var playlists = _this.state.playlists;\n      playlists.find(function (playlist) {\n        return playlist.index === index;\n      }).rating = rating;\n      console.log(playlists);\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.updateFilteredRating = function (rating) {\n      var filterRating = _this.state.filterRating;\n      filterRating = rating;\n\n      _this.setState({\n        filterRating: filterRating\n      });\n    };\n\n    _this.resetRateFiltering = function (event) {\n      _this.setState({\n        filterRating: 0\n      });\n    };\n\n    _this.state = {\n      serverData: {},\n      filterString: '',\n      filterRating: 0\n    };\n    _this.resetRateFiltering = _this.resetRateFiltering.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addPlaylistRating = _this.addPlaylistRating.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(\"user\", JSON.stringify(this.state.user));\n      localStorage.setItem(\"playlists\", JSON.stringify(this.state.playlists));\n      var localStorageUserRef = localStorage.getItem('user');\n\n      if (localStorageUserRef) {\n        this.setState({\n          user: JSON.parse(localStorageUserRef)\n        });\n      }\n\n      var localStoragePlaylistsRef = localStorage.getItem('playlists');\n\n      if (localStoragePlaylistsRef) {\n        this.setState({\n          playlists: JSON.parse(localStoragePlaylistsRef)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      var playlistsToRender = this.state.user && this.state.playlists ? this.state.playlists.filter(function (playlist) {\n        var matchesPlaylist = playlist.name.toLowerCase().includes(_this2.state.filterString.toLowerCase());\n        var matchesSong = playlist.songs.find(function (song) {\n          return song.name.toLowerCase().includes(_this2.state.filterString.toLowerCase());\n        });\n        return matchesPlaylist || matchesSong;\n      }).filter(function (playlist) {\n        var matcheRating;\n\n        if (_this2.state.filterRating !== 0) {\n          matcheRating = playlist.rating === _this2.state.filterRating;\n          return matcheRating;\n        } else {\n          matcheRating = playlist;\n        }\n\n        return matcheRating;\n      }) : [];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.state.user, \"'s playlist\"), React.createElement(DownloadPlaylist, {\n        playlists: this.state.playlists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(PlaylistCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(HoursCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        onTextChange: function onTextChange(text) {\n          return _this2.setState({\n            filterString: text\n          });\n        },\n        updateFilteredRating: this.updateFilteredRating,\n        resetRateFiltering: this.resetRateFiltering,\n        ratingFilterValue: this.state.filterRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(PlaylistsListing, Object.assign({}, props, {\n            playlists: playlistsToRender,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/:playlistId\",\n        render: function render(props) {\n          return React.createElement(PlaylistPage, Object.assign({}, props, {\n            playlists: playlistsToRender,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }));\n        } // component={PlaylistPage}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))))) : React.createElement(LoginPage, {\n        loadSpotifyData: this.loadSpotifyData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","PlaylistsListing","DownloadPlaylist","HoursCounter","Filter","PlaylistCounter","LoginPage","PlaylistPage","fetchPlaylistInfos","fetchPlaylistData","App","loadSpotifyData","data","setState","playlists","user","console","log","state","addTag","index","tag","tags","push","addPlaylistRating","rating","find","playlist","updateFilteredRating","filterRating","resetRateFiltering","event","serverData","filterString","bind","localStorage","setItem","JSON","stringify","localStorageUserRef","getItem","parse","localStoragePlaylistsRef","playlistsToRender","filter","matchesPlaylist","name","toLowerCase","includes","matchesSong","songs","song","matcheRating","text","props"],"mappings":"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","sourcesContent":["//packages\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// components \nimport PlaylistsListing from './PlaylistsListing'\nimport DownloadPlaylist from './DownloadPlaylist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport LoginPage from './LoginPage';\nimport PlaylistPage from './PlaylistPage';\n\n// js \n\nimport { fetchPlaylistInfos, fetchPlaylistData } from '../api/fetchData'\n\n// css\nimport '../css/App.css';\n\n// import querystring from 'query-string';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      filterString: '',\n      filterRating: 0,\n    }\n\n    this.resetRateFiltering = this.resetRateFiltering.bind(this);\n    this.addPlaylistRating = this.addPlaylistRating.bind(this);\n  }\n\n  loadSpotifyData = (data) => {\n    this.setState({\n      playlists: data.playlists,\n      user: data.user\n    })\n    console.log(this.state)\n  }\n\n  addTag = (index, tag) => {\n    let playlists = this.state.playlists\n    playlists[index].tags ? playlists[index].tags.push(tag)\n      : playlists[index].tags = [tag]\n    this.setState({ playlists })\n  }\n\n  addPlaylistRating = (index, rating) => {\n    let playlists = this.state.playlists\n    playlists.find(playlist => playlist.index === index).rating = rating\n    console.log(playlists)\n    this.setState({ playlists })\n  }\n\n  updateFilteredRating = (rating) => {\n    let filterRating = this.state.filterRating\n    filterRating = rating\n    this.setState({ filterRating })\n  }\n\n  resetRateFiltering = (event) => {\n    this.setState({ filterRating: 0 })\n  }\n\n  componentDidUpdate() {\n\n    localStorage.setItem(\n      \"user\",\n      JSON.stringify(this.state.user))\n\n    localStorage.setItem(\n      \"playlists\",\n      JSON.stringify(this.state.playlists))\n\n    const localStorageUserRef = localStorage.getItem('user')\n\n    if (localStorageUserRef) {\n      this.setState({ user: JSON.parse(localStorageUserRef) })\n    }\n\n    const localStoragePlaylistsRef = localStorage.getItem('playlists')\n    if (localStoragePlaylistsRef) {\n      this.setState({ playlists: JSON.parse(localStoragePlaylistsRef) })\n    }\n  }\n\n  render() {\n    console.log(this.state)\n    let playlistsToRender =\n      this.state.user &&\n        this.state.playlists\n        ? this.state.playlists.filter(playlist => {\n          let matchesPlaylist = playlist.name.toLowerCase().includes(\n            this.state.filterString.toLowerCase())\n          let matchesSong = playlist.songs.find(song =>\n            song.name.toLowerCase().includes(this.state.filterString.toLowerCase()))\n          return matchesPlaylist || matchesSong\n        }).filter(playlist => {\n          let matcheRating;\n          if (this.state.filterRating !== 0) {\n            matcheRating = playlist.rating === this.state.filterRating\n            return matcheRating\n          } else {\n            matcheRating = playlist\n          }\n          return matcheRating\n        }) : []\n    return (\n      <div className=\"App\">\n        {this.state.user ?\n          <div>\n            <h1 >\n              {this.state.user}'s playlist\n            </h1>\n            <DownloadPlaylist\n              playlists={this.state.playlists}\n            />\n            <PlaylistCounter\n              playlists={playlistsToRender}\n            />\n            <HoursCounter\n              playlists={playlistsToRender}\n            />\n            <Filter\n              onTextChange={text => this.setState({ filterString: text })}\n              updateFilteredRating={this.updateFilteredRating}\n              resetRateFiltering={this.resetRateFiltering}\n              ratingFilterValue={this.state.filterRating}\n            />\n            <BrowserRouter>\n              <div>\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/\"\n                    render={(props) => <PlaylistsListing {...props} playlists={playlistsToRender} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/:playlistId\"\n                    render={(props) => <PlaylistPage {...props} playlists={playlistsToRender} />}\n                  // component={PlaylistPage}\n                  />\n                </Switch>\n              </div>\n            </BrowserRouter>\n          </div> : <LoginPage loadSpotifyData={this.loadSpotifyData} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}