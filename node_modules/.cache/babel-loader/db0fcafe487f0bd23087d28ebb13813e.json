{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/PlaylistCard.js\";\nimport React, { Component } from 'react';\nimport '../css/Playlist.css';\nimport TagManager from './TagManager';\nimport Rating from 'react-rating';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar as faStarSolid } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as faStarRegular } from '@fortawesome/free-regular-svg-icons'; // add icon to the library\n\nlibrary.add(faStarSolid, faStarRegular);\n\nvar PlaylistCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistCard, _Component);\n\n  function PlaylistCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaylistCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaylistCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleButtonClick = function () {\n      var playlist = _this.props.playlist;\n      var playlistNameConcatenated = playlist.name.replace(/\\//g, \" \").split(\" \").join('').toLowerCase();\n\n      _this.props.history.push(\"/playlist=\".concat(playlist.index, \"-\").concat(playlistNameConcatenated));\n    };\n\n    _this.handleRatingClick = function (rating) {\n      _this.props.addPlaylistRating(_this.props.playlist.index, rating);\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistCard, [{\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlist;\n      var hasTags = playlist.tags === undefined ? false : true;\n      var tagList;\n\n      if (hasTags) {\n        tagList = React.createElement(\"div\", {\n          className: \"tagList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \" Tags:\", playlist.tags.map(function (tag) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \"\".concat(tag, \" \"));\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: playlist.imageUrl,\n        alt: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, playlist.name), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, playlist.songs.slice(0, 3).map(function (song, key) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, song.name);\n      })), tagList, React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"cta\",\n        onClick: this.handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"see playlist\")), React.createElement(TagManager, {\n        addTag: this.props.addTag,\n        index: this.props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Rating, {\n        className: \"playlist-rating\",\n        emptySymbol: React.createElement(FontAwesomeIcon, {\n          icon: ['far', 'star'],\n          style: {\n            color: 'blue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }),\n        fullSymbol: React.createElement(FontAwesomeIcon, {\n          icon: ['fas', 'star'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }),\n        initialRating: playlist.rating,\n        onClick: this.handleRatingClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PlaylistCard;\n}(Component);\n\nexport default PlaylistCard;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/PlaylistCard.js"],"names":["React","Component","TagManager","Rating","library","FontAwesomeIcon","faStar","faStarSolid","faStarRegular","add","PlaylistCard","handleButtonClick","playlist","props","playlistNameConcatenated","name","replace","split","join","toLowerCase","history","push","index","handleRatingClick","rating","addPlaylistRating","hasTags","tags","undefined","tagList","map","tag","imageUrl","songs","slice","song","key","addTag","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,mCAAtC;AACA,SAASD,MAAM,IAAIE,aAAnB,QAAwC,qCAAxC,C,CAEA;;AACAJ,OAAO,CAACK,GAAR,CAAYF,WAAZ,EAAyBC,aAAzB;;IAGME,Y;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAoB,YAAM;AACxB,UAAIC,QAAQ,GAAG,MAAKC,KAAL,CAAWD,QAA1B;AACA,UAAIE,wBAAwB,GAAGF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,KAAtB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,GAAxC,EAA6CC,IAA7C,CAAkD,EAAlD,EAAsDC,WAAtD,EAA/B;;AACA,YAAKN,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,qBAAqCT,QAAQ,CAACU,KAA9C,cAAuDR,wBAAvD;AACD,K;;UAEDS,iB,GAAoB,UAACC,MAAD,EAAY;AAC9B,YAAKX,KAAL,CAAWY,iBAAX,CAA6B,MAAKZ,KAAL,CAAWD,QAAX,CAAoBU,KAAjD,EAAwDE,MAAxD;AACD,K;;;;;;;6BAEQ;AACP,UAAIZ,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B;AACA,UAAIc,OAAO,GAAGd,QAAQ,CAACe,IAAT,KAAkBC,SAAlB,GAA8B,KAA9B,GAAsC,IAApD;AACA,UAAIC,OAAJ;;AAEA,UAAIH,OAAJ,EAAa;AACXG,QAAAA,OAAO,GACL;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKjB,QAAQ,CAACe,IAAT,CAAcG,GAAd,CAAkB,UAAAC,GAAG;AAAA,iBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAUA,GAAV,OADsB;AAAA,SAArB,CADL,CADF;AAMD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEnB,QAAQ,CAACoB,QAAnB;AAA6B,QAAA,GAAG,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKpB,QAAQ,CAACG,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,QAAQ,CAACqB,KAAT,CAAeC,KAAf,CAAqB,CAArB,EAAwB,CAAxB,EAA2BJ,GAA3B,CAA+B,UAACK,IAAD,EAAOC,GAAP;AAAA,eAC9B;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeD,IAAI,CAACpB,IAApB,CAD8B;AAAA,OAA/B,CADH,CAHF,EAQGc,OARH,EASE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAE,KAAKlB,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CATF,EAYE,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWwB,MAA/B;AAAuC,QAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWS,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAaE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,WAAW,EAAE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,CAAvB;AAAwC,UAAA,KAAK,EAAE;AAAEgB,YAAAA,KAAK,EAAE;AAAT,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFf;AAGE,QAAA,UAAU,EAAE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHd;AAIE,QAAA,aAAa,EAAE1B,QAAQ,CAACY,MAJ1B;AAKE,QAAA,OAAO,EAAE,KAAKD,iBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF;AAwBD;;;;EAlDwBtB,S;;AAqD3B,eAAeS,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../css/Playlist.css';\nimport TagManager from './TagManager';\nimport Rating from 'react-rating';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar as faStarSolid } from '@fortawesome/free-solid-svg-icons'\nimport { faStar as faStarRegular } from '@fortawesome/free-regular-svg-icons'\n\n// add icon to the library\nlibrary.add(faStarSolid, faStarRegular)\n\n\nclass PlaylistCard extends Component {\n\n  handleButtonClick = () => {\n    let playlist = this.props.playlist\n    let playlistNameConcatenated = playlist.name.replace(/\\//g, \" \").split(\" \").join('').toLowerCase()\n    this.props.history.push(`/playlist=${playlist.index}-${playlistNameConcatenated}`)\n  }\n\n  handleRatingClick = (rating) => {\n    this.props.addPlaylistRating(this.props.playlist.index, rating)\n  }\n\n  render() {\n    let playlist = this.props.playlist;\n    let hasTags = playlist.tags === undefined ? false : true\n    let tagList;\n\n    if (hasTags) {\n      tagList =\n        <div className='tagList'> Tags:\n            {playlist.tags.map(tag =>\n            <span>{`${tag} `}</span>\n          )}\n        </div>\n    }\n\n    return (\n      <div className=\"playlist\">\n        <img src={playlist.imageUrl} alt=\"playlist\" />\n        <h3>{playlist.name}</h3>\n        <ul>\n          {playlist.songs.slice(0, 3).map((song, key) =>\n            <li key={key}>{song.name}</li>\n          )}\n        </ul>\n        {tagList}\n        <div className=\"buttons\">\n          <button className=\"cta\" onClick={this.handleButtonClick}>see playlist</button>\n        </div>\n        <TagManager addTag={this.props.addTag} index={this.props.index} />\n        <Rating\n          className=\"playlist-rating\"\n          emptySymbol={<FontAwesomeIcon icon={['far', 'star']} style={{ color: 'blue' }} />}\n          fullSymbol={<FontAwesomeIcon icon={['fas', 'star']} />}\n          initialRating={playlist.rating}\n          onClick={this.handleRatingClick}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport default PlaylistCard;"]},"metadata":{},"sourceType":"module"}