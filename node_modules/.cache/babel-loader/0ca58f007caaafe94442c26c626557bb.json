{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/Playlist.js\";\nimport React, { Component } from 'react';\nimport '../css/Playlist.css';\nimport TagManager from './TagManager';\nimport Rating from 'react-rating';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // import { fasStar } from '@fortawesome/free-solid-svg-icons'\n\nimport { faStar as faStarSolid } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as faStarRegular } from '@fortawesome/free-regular-svg-icons'; // library.add(fasStar)\n\nlibrary.add(faStarSolid, faStarRegular);\n\nvar Playlist =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Playlist, _Component);\n\n  function Playlist(props) {\n    var _this;\n\n    _classCallCheck(this, Playlist);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Playlist).call(this, props));\n    _this.state = {\n      rating: props.initialRating\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Playlist, [{\n    key: \"handleClick\",\n    value: function handleClick(rating) {\n      console.log(rating);\n      this.setState({\n        rating: rating\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlist;\n      var hasTags = playlist.tags === undefined ? false : true;\n      var tagList;\n\n      if (hasTags) {\n        tagList = React.createElement(\"div\", {\n          className: \"tagList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \" Tags:\", playlist.tags.map(function (tag) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"\".concat(tag, \" \"));\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: playlist.imageUrl,\n        alt: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, playlist.name), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, playlist.songs.slice(0, 3).map(function (song) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, song.name);\n      })), tagList, React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"cta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"see playlist\")), React.createElement(TagManager, {\n        addTag: this.props.addTag,\n        index: this.props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Rating, Object.assign({}, this.props, {\n        className: \"playlist-rating\",\n        emptySymbol: React.createElement(FontAwesomeIcon, {\n          icon: ['far', 'star'],\n          style: {\n            color: 'blue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }),\n        fullSymbol: React.createElement(FontAwesomeIcon, {\n          icon: ['fas', 'star'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }),\n        initialRating: this.state.rating,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Playlist;\n}(Component);\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/Playlist.js"],"names":["React","Component","TagManager","Rating","library","FontAwesomeIcon","faStar","faStarSolid","faStarRegular","add","Playlist","props","state","rating","initialRating","handleClick","bind","console","log","setState","playlist","hasTags","tags","undefined","tagList","map","tag","imageUrl","name","songs","slice","song","addTag","index","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../css/Playlist.css';\nimport TagManager from './TagManager';\nimport Rating from 'react-rating';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { fasStar } from '@fortawesome/free-solid-svg-icons'\nimport { faStar as faStarSolid } from '@fortawesome/free-solid-svg-icons'\nimport { faStar as faStarRegular } from '@fortawesome/free-regular-svg-icons'\n\n// library.add(fasStar)\nlibrary.add(faStarSolid, faStarRegular)\n\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: props.initialRating\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(rating) {\n    console.log(rating)\n    this.setState({ rating })\n  }\n\n  render() {\n    let playlist = this.props.playlist;\n    let hasTags = playlist.tags === undefined ? false : true\n    let tagList;\n\n    if (hasTags) {\n      tagList =\n        <div className='tagList'> Tags:\n            {playlist.tags.map(tag =>\n            <span>{`${tag} `}</span>\n          )}\n        </div>\n    }\n\n    return (\n      <div className=\"playlist\">\n        <img src={playlist.imageUrl} alt=\"playlist\" />\n        <h3>{playlist.name}</h3>\n        <ul>\n          {playlist.songs.slice(0, 3).map(song =>\n            <li>{song.name}</li>\n          )}\n        </ul>\n        {tagList}\n        <div className=\"buttons\">\n          <p className=\"cta\">see playlist</p>\n        </div>\n        <TagManager addTag={this.props.addTag} index={this.props.index} />\n        <Rating\n          {...this.props}\n          className=\"playlist-rating\"\n          emptySymbol={<FontAwesomeIcon icon={['far', 'star']} style={{ color: 'blue' }} />}\n          fullSymbol={<FontAwesomeIcon icon={['fas', 'star']} />}\n          initialRating={this.state.rating}\n          onClick={this.handleClick}\n        />\n\n\n      </div>\n\n    );\n  }\n}\n\nexport default Playlist;"]},"metadata":{},"sourceType":"module"}