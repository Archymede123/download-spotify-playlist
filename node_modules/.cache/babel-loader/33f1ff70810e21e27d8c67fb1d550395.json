{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/BlindtestGame.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js'; // my components\n\nimport Button from '../UI-components/Button';\nimport Blindtest from './Blindtest';\nimport BlindtestSession from './BlindtestSession';\nimport PlaylistPicker from './PlaylistPicker'; // css\n\nimport '../../css/Blindtest.css';\nvar spotifyApi = new SpotifyWebApi();\n\nvar BlindtestGame =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlindtestGame, _Component);\n\n  function BlindtestGame() {\n    var _this;\n\n    _classCallCheck(this, BlindtestGame);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlindtestGame).call(this));\n\n    _this.startGame = function () {\n      var gameStarted = !_this.state.gameStarted;\n\n      if (_this.state.playlistSelected) {\n        var uri = {\n          \"context_uri\": _this.state.playlistSelected.uri\n        };\n        spotifyApi.play(uri);\n      }\n\n      _this.setState({\n        gameStarted: gameStarted\n      });\n    };\n\n    _this.selectPlaylist = function (playlist) {\n      _this.setState({\n        playlistSelected: playlist\n      });\n    };\n\n    _this.updateScore = function () {\n      var score = _this.state.score;\n      score += 1;\n\n      if (_this.state.gameStarted) {\n        _this.setState({\n          score: score\n        });\n      }\n\n      spotifyApi.skipToNext();\n    };\n\n    _this.state = {\n      gameStarted: false,\n      score: 0\n    };\n    return _this;\n  }\n\n  _createClass(BlindtestGame, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      spotifyApi.setAccessToken(this.props.access_token);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"blindestGame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        content: \"close\",\n        onClick: this.props.closeGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"informations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"You currently have \", this.state.score, \" points\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Previously played songs\")), React.createElement(PlaylistPicker, {\n        selectPlaylist: this.selectPlaylist,\n        access_token: this.props.access_token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Are you fucking ready ?\"), React.createElement(Button, {\n        content: \"yes, go go go\",\n        onClick: this.startGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.gameStarted && React.createElement(BlindtestSession, {\n        access_token: this.props.access_token,\n        updateScore: this.updateScore,\n        gameStarted: this.state.gameStarted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BlindtestGame;\n}(Component);\n\nexport default BlindtestGame;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/BlindtestGame.js"],"names":["React","Component","SpotifyWebApi","Button","Blindtest","BlindtestSession","PlaylistPicker","spotifyApi","BlindtestGame","startGame","gameStarted","state","playlistSelected","uri","play","setState","selectPlaylist","playlist","updateScore","score","skipToNext","setAccessToken","props","access_token","closeGame"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\n// my components\nimport Button from '../UI-components/Button';\nimport Blindtest from './Blindtest'\nimport BlindtestSession from './BlindtestSession'\nimport PlaylistPicker from './PlaylistPicker'\n\n// css\nimport '../../css/Blindtest.css';\n\n\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass BlindtestGame extends Component {\n    constructor() {\n        super()\n        this.state = {\n            gameStarted: false,\n            score: 0\n        }\n    }\n\n    startGame = () => {\n        let gameStarted = !this.state.gameStarted\n        if (this.state.playlistSelected) {\n            const uri = {\n                \"context_uri\": this.state.playlistSelected.uri,\n            }\n            spotifyApi.play(uri)\n        }\n        this.setState({ gameStarted })\n    }\n\n    selectPlaylist = (playlist) => {\n        this.setState({ playlistSelected: playlist })\n    }\n\n    updateScore = () => {\n        let score = this.state.score\n        score += 1\n        if (this.state.gameStarted) {\n            this.setState({\n                score\n            })\n        }\n        spotifyApi.skipToNext()\n    }\n\n    componentDidMount() {\n        spotifyApi.setAccessToken(this.props.access_token)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"blindestGame\">\n                    <div className=\"close\">\n                        <Button content=\"close\" onClick={this.props.closeGame} />\n                    </div>\n                    <div className=\"informations\">\n                        <p>You currently have {this.state.score} points</p>\n                        <p>Previously played songs</p>\n                    </div>\n                    <PlaylistPicker\n                        selectPlaylist={this.selectPlaylist}\n                        access_token={this.props.access_token}\n                    />\n                    <div className=\"game\">\n                        <p>Are you fucking ready ?</p>\n                        <Button content=\"yes, go go go\" onClick={this.startGame} />\n                        <div>\n                            {/* <Blindtest\n                                access_token={this.props.access_token}\n                                updateScore={this.updateScore}\n                                gameStarted={this.state.gameStarted}\n                            /> */}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {this.state.gameStarted &&\n                        <BlindtestSession\n                            access_token={this.props.access_token}\n                            updateScore={this.updateScore}\n                            gameStarted={this.state.gameStarted}\n                        />\n                    }\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default BlindtestGame;"]},"metadata":{},"sourceType":"module"}