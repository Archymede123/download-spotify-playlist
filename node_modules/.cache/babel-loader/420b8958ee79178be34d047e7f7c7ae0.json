{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/BlindtestGame.js\";\nimport React, { Component } from 'react';\nimport Button from '../UI-components/Button';\nimport Blindtest from './Blindtest'; // import SpotifyWebApi from 'spotify-web-api-js';\n\nimport '../../css/Blindtest.css'; // const spotifyApi = new SpotifyWebApi();\n\nvar BlindtestGame =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlindtestGame, _Component);\n\n  function BlindtestGame() {\n    var _this;\n\n    _classCallCheck(this, BlindtestGame);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlindtestGame).call(this));\n\n    _this.startGame = function () {};\n\n    _this.startCounter = function () {\n      var timeToGuess = _this.state.timeToGuess;\n      var interval = setInterval(function () {\n        timeToGuess -= 1;\n\n        _this.setState({\n          timeToGuess: timeToGuess\n        });\n\n        if (timeToGuess <= 0) {\n          clearInterval(interval);\n        }\n      }, 1000);\n    };\n\n    _this.state = {\n      gameStarted: false,\n      timeToGuess: 15,\n      score: 0\n    };\n    return _this;\n  }\n\n  _createClass(BlindtestGame, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"blindestGame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Button, {\n        content: \"close\",\n        onClick: this.props.closeGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"informations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"You currently have \", this.state.score, \" points\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Previously played songs\")), React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Are you fucking ready ?\"), React.createElement(Button, {\n        content: \"yes, go go go\",\n        onClick: this.startCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"You have \", this.state.timeToGuess, \" seconds to guess the song\"), this.state.timeToGuess > 0 ? React.createElement(Blindtest, {\n        access_token: this.props.access_token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"To late mate\")));\n    }\n  }]);\n\n  return BlindtestGame;\n}(Component);\n\nexport default BlindtestGame;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/BlindtestGame.js"],"names":["React","Component","Button","Blindtest","BlindtestGame","startGame","startCounter","timeToGuess","state","interval","setInterval","setState","clearInterval","gameStarted","score","props","closeGame","access_token"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AAEA,OAAO,yBAAP,C,CAEA;;IAIMC,a;;;;;AACF,2BAAc;AAAA;;AAAA;;AACV;;AADU,UASdC,SATc,GASF,YAAM,CAEjB,CAXa;;AAAA,UAadC,YAbc,GAaC,YAAM;AACjB,UAAIC,WAAW,GAAG,MAAKC,KAAL,CAAWD,WAA7B;AACA,UAAIE,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAC7BH,QAAAA,WAAW,IAAI,CAAf;;AACA,cAAKI,QAAL,CAAc;AAAEJ,UAAAA,WAAW,EAAXA;AAAF,SAAd;;AACA,YAAIA,WAAW,IAAI,CAAnB,EAAsB;AAClBK,UAAAA,aAAa,CAACH,QAAD,CAAb;AACH;AACJ,OANyB,EAMvB,IANuB,CAA1B;AAOH,KAtBa;;AAEV,UAAKD,KAAL,GAAa;AACTK,MAAAA,WAAW,EAAE,KADJ;AAETN,MAAAA,WAAW,EAAE,EAFJ;AAGTO,MAAAA,KAAK,EAAE;AAHE,KAAb;AAFU;AAOb;;;;6BAiBQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAuB,KAAKR,KAAL,CAAWM,KAAlC,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,CAJJ,EAQI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,eAAhB;AAAgC,QAAA,OAAO,EAAE,KAAKR,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa,KAAKE,KAAL,CAAWD,WAAxB,+BAHJ,EAIK,KAAKC,KAAL,CAAWD,WAAX,GAAyB,CAAzB,GACG,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKQ,KAAL,CAAWE,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANV,CARJ,CADJ;AAsBH;;;;EAhDuBhB,S;;AAmD5B,eAAeG,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '../UI-components/Button';\nimport Blindtest from './Blindtest'\n// import SpotifyWebApi from 'spotify-web-api-js';\n\nimport '../../css/Blindtest.css';\n\n// const spotifyApi = new SpotifyWebApi();\n\n\n\nclass BlindtestGame extends Component {\n    constructor() {\n        super()\n        this.state = {\n            gameStarted: false,\n            timeToGuess: 15,\n            score: 0\n        }\n    }\n\n    startGame = () => {\n\n    }\n\n    startCounter = () => {\n        let timeToGuess = this.state.timeToGuess\n        let interval = setInterval(() => {\n            timeToGuess -= 1\n            this.setState({ timeToGuess })\n            if (timeToGuess <= 0) {\n                clearInterval(interval)\n            }\n        }, 1000)\n    }\n\n    render() {\n        return (\n            <div className=\"blindestGame\">\n                <div className=\"close\">\n                    <Button content=\"close\" onClick={this.props.closeGame} />\n                </div>\n                <div className=\"informations\">\n                    <p>You currently have {this.state.score} points</p>\n                    <p>Previously played songs</p>\n                </div>\n                <div className=\"game\">\n                    <p>Are you fucking ready ?</p>\n                    <Button content=\"yes, go go go\" onClick={this.startCounter} />\n                    <p>You have {this.state.timeToGuess} seconds to guess the song</p>\n                    {this.state.timeToGuess > 0 ?\n                        <Blindtest access_token={this.props.access_token} />\n                        : <p>To late mate</p>\n                    }\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default BlindtestGame;"]},"metadata":{},"sourceType":"module"}