{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/LoginPage.js\";\nimport React, { Component } from 'react';\nimport Button from './UI-components/Button'; //css import\n\nimport '../css/App.css'; // js \n\nimport { fetchPlaylistInfos, fetchPlaylistData } from '../api/fetchData';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this));\n    _this._isMounted = true;\n\n    _this.goToPlaylists = function (event) {\n      event.preventDefault();\n      window.location = 'http://localhost:8888/login';\n    };\n\n    _this.state = {\n      user: {},\n      playlists: {},\n      access_token: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accessToken = new URLSearchParams(window.location.search).get('access_token');\n      console.log(accessToken);\n      this.setState({\n        access_token: accessToken\n      });\n      if (!accessToken) return;\n\n      if (this._isMounted) {\n        fetchPlaylistInfos(accessToken).then(function (data) {\n          _this2.setState({\n            user: [data.display_name, data.followers.total, data.images[0].url]\n          });\n        });\n        fetchPlaylistData(accessToken).then(function (playlists) {\n          _this2.setState({\n            playlists: playlists.map(function (item, index) {\n              return {\n                name: item.name,\n                songs: item.trackDatas,\n                imageUrl: item.images[0].url,\n                rating: 0,\n                index: index\n              };\n            })\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var statePlaylist = this.state.playlists;\n\n      if (Object.keys(statePlaylist).length !== 0) {\n        this.props.loadSpotifyData(this.state);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"You currently have no playlist loaded. Click the button below to login to your spotify account\"), React.createElement(Button, {\n        content: \"Sign In with Spotify\",\n        onClick: this.goToPlaylists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/LoginPage.js"],"names":["React","Component","Button","fetchPlaylistInfos","fetchPlaylistData","LoginPage","_isMounted","goToPlaylists","event","preventDefault","window","location","state","user","playlists","access_token","accessToken","URLSearchParams","search","get","console","log","setState","then","data","display_name","followers","total","images","url","map","item","index","name","songs","trackDatas","imageUrl","rating","statePlaylist","Object","keys","length","props","loadSpotifyData","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;;AACA,OAAO,gBAAP,C,CACA;;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,kBAAtD;;IAEMC,S;;;;;AACF,uBAAc;AAAA;;AAAA;;AACV;AADU,UASdC,UATc,GASD,IATC;;AAAA,UAWdC,aAXc,GAWE,UAACC,KAAD,EAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,6BAAlB;AACH,KAda;;AAEV,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAFU;AAOb;;;;wCASmB;AAAA;;AAChB,UAAIC,WAAW,GAAG,IAAIC,eAAJ,CAAoBP,MAAM,CAACC,QAAP,CAAgBO,MAApC,EAA4CC,GAA5C,CAAgD,cAAhD,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,WAAKM,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAEC;AAAhB,OAAd;AACA,UAAI,CAACA,WAAL,EAAkB;;AAElB,UAAI,KAAKV,UAAT,EAAqB;AACjBH,QAAAA,kBAAkB,CAACa,WAAD,CAAlB,CAAgCO,IAAhC,CAAqC,UAAAC,IAAI,EAAI;AACzC,UAAA,MAAI,CAACF,QAAL,CAAc;AACVT,YAAAA,IAAI,EAAE,CAACW,IAAI,CAACC,YAAN,EAAoBD,IAAI,CAACE,SAAL,CAAeC,KAAnC,EAA0CH,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeC,GAAzD;AADI,WAAd;AAGH,SAJD;AAMAzB,QAAAA,iBAAiB,CAACY,WAAD,CAAjB,CAA+BO,IAA/B,CAAoC,UAAAT,SAAS,EAAI;AAC7C,UAAA,MAAI,CAACQ,QAAL,CAAc;AACVR,YAAAA,SAAS,EAAEA,SAAS,CAACgB,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtC,qBAAO;AACHC,gBAAAA,IAAI,EAAEF,IAAI,CAACE,IADR;AAEHC,gBAAAA,KAAK,EAAEH,IAAI,CAACI,UAFT;AAGHC,gBAAAA,QAAQ,EAAEL,IAAI,CAACH,MAAL,CAAY,CAAZ,EAAeC,GAHtB;AAIHQ,gBAAAA,MAAM,EAAE,CAJL;AAKHL,gBAAAA,KAAK,EAAEA;AALJ,eAAP;AAOH,aARU;AADD,WAAd;AAYH,SAbD;AAcH;AACJ;;;yCAEoB;AACjB,UAAIM,aAAa,GAAG,KAAK1B,KAAL,CAAWE,SAA/B;;AACA,UAAIyB,MAAM,CAACC,IAAP,CAAYF,aAAZ,EAA2BG,MAA3B,KAAsC,CAA1C,EAA6C;AACzC,aAAKC,KAAL,CAAWC,eAAX,CAA2B,KAAK/B,KAAhC;AACH;AACJ;;;2CAEsB;AACnB,WAAKN,UAAL,GAAkB,KAAlB;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAE;AAAEsC,UAAAA,MAAM,EAAE;AAAV,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAE,KAAKrC,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAUH;;;;EArEmBN,S;;AAwExB,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from './UI-components/Button';\n\n//css import\nimport '../css/App.css';\n// js \nimport { fetchPlaylistInfos, fetchPlaylistData } from '../api/fetchData'\n\nclass LoginPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: {},\n            playlists: {},\n            access_token: ''\n        }\n    }\n\n    _isMounted = true;\n\n    goToPlaylists = (event) => {\n        event.preventDefault()\n        window.location = 'http://localhost:8888/login'\n    }\n\n    componentDidMount() {\n        let accessToken = new URLSearchParams(window.location.search).get('access_token')\n        console.log(accessToken)\n        this.setState({ access_token: accessToken })\n        if (!accessToken) return;\n\n        if (this._isMounted) {\n            fetchPlaylistInfos(accessToken).then(data => {\n                this.setState({\n                    user: [data.display_name, data.followers.total, data.images[0].url]\n                })\n            })\n\n            fetchPlaylistData(accessToken).then(playlists => {\n                this.setState({\n                    playlists: playlists.map((item, index) => {\n                        return {\n                            name: item.name,\n                            songs: item.trackDatas,\n                            imageUrl: item.images[0].url,\n                            rating: 0,\n                            index: index\n                        }\n                    }\n                    )\n                })\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        let statePlaylist = this.state.playlists\n        if (Object.keys(statePlaylist).length !== 0) {\n            this.props.loadSpotifyData(this.state)\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n    render() {\n        return (\n            <div>\n                <p style={{ margin: 0 }}>You currently have no playlist loaded. Click the button\n                    below to login to your spotify account\n                </p>\n                <Button content=\"Sign In with Spotify\" onClick={this.goToPlaylists} />\n\n            </div>\n\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}