{"ast":null,"code":"import _toConsumableArray from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { CSVLink } from 'react-csv';\nimport DownloadPlaylist from './DownloadPlaylist'; // import querystring from 'query-string';\n\nvar defaultTextColor = \"red\";\nvar defaultStyle = {\n  color: defaultTextColor\n};\n\nvar PlaylistCounter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistCounter, _Component);\n\n  function PlaylistCounter() {\n    _classCallCheck(this, PlaylistCounter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlaylistCounter).apply(this, arguments));\n  }\n\n  _createClass(PlaylistCounter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: _objectSpread({}, defaultStyle, {\n          width: '40%',\n          display: 'inline-block'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: defaultStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.playlists.length, \" playlists\"));\n    }\n  }]);\n\n  return PlaylistCounter;\n}(Component);\n\nvar HoursCounter =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(HoursCounter, _Component2);\n\n  function HoursCounter() {\n    _classCallCheck(this, HoursCounter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HoursCounter).apply(this, arguments));\n  }\n\n  _createClass(HoursCounter, [{\n    key: \"render\",\n    value: function render() {\n      var allSongs = this.props.playlists.reduce(function (songs, eachPlaylist) {\n        return songs.concat(eachPlaylist.songs);\n      }, []);\n      var totalDuration = allSongs.reduce(function (sum, eachSong) {\n        return sum + eachSong.duration;\n      }, 0);\n      return React.createElement(\"div\", {\n        style: _objectSpread({}, defaultStyle, {\n          width: '40%',\n          display: 'inline-block'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: defaultStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, Math.round(totalDuration / 60), \" Hours\"));\n    }\n  }]);\n\n  return HoursCounter;\n}(Component);\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Filter, _Component3);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Filter).apply(this, arguments));\n  }\n\n  _createClass(Filter, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        style: defaultStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        onKeyUp: function onKeyUp(e) {\n          return _this.props.onTextChange(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\nvar Playlist =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(Playlist, _Component4);\n\n  function Playlist() {\n    _classCallCheck(this, Playlist);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Playlist).apply(this, arguments));\n  }\n\n  _createClass(Playlist, [{\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlist;\n      return React.createElement(\"div\", {\n        style: _objectSpread({}, defaultStyle, {\n          width: '25%',\n          display: 'inline-block'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: playlist.imageUrl,\n        alt: \"\",\n        style: {\n          width: '160px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, playlist.name), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, playlist.songs.slice(0, 3).map(function (song) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, song.name);\n      })));\n    }\n  }]);\n\n  return Playlist;\n}(Component); // class DownloadPlaylist extends Component {\n//   render() {\n//     let playlists = this.props.playlists\n//     // let songs = playlistsSongs[0].songs\n//     if (this.props.playlists) {\n//       let playlistsToDownload = []\n//       playlists.forEach(playlist => {\n//         let playlistToDownload = []\n//         playlistToDownload.push(playlist.name)\n//         playlist.songs.forEach(song => {\n//           playlistToDownload.push(song.name)\n//         })\n//         playlistsToDownload.push(playlistToDownload)\n//       })\n//       console.log(playlistsToDownload)\n//       return (\n//         < CSVLink data={playlistsToDownload}\n//           filename={\"my-file.csv\"}\n//           target=\"_blank\" >\n//           Download playlists as CSV\n//         </CSVLink >\n//       )\n//     }\n//     return (null)\n//   }\n// }\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(App, _Component5);\n\n  function App() {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this2.state = {\n      serverData: {},\n      filterString: ''\n    };\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var accessToken = new URLSearchParams(window.location.search).get('access_token');\n      if (!accessToken) return;\n      fetch('https://api.spotify.com/v1/me', {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this3.setState({\n          user: {\n            name: data.display_name\n          }\n        });\n      });\n      fetch(\"https://api.spotify.com/v1/me/playlists?limit=49\", {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (playlistData) {\n        var playlists = playlistData.items;\n        var trackDataPromises = playlists.map(function (playlist) {\n          // let responsePromise = fetch(`${playlist.tracks.href}?offset=100`, {\n          //   headers: { 'Authorization': 'Bearer ' + accessToken }\n          // })\n          var responsePromise = []; // function fetchData(page) {\n          //   let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n          //     headers: { 'Authorization': 'Bearer ' + accessToken }\n          //   }).then(response => response.json())\n          //   responsePromise.push(responsePromiseDetails)\n          // }\n          // for (let i = 1; i < 6; i++) {\n          //   setTimeout(fetchData(i), 50000)\n          // }\n          // function fetchData(page) {\n          //   console.log(`hello ${page}`)\n          // }\n          // for (let i = 1; i < 6; i++) {\n          //   setTimeout(fetchData(i), i * 1000)\n          // }\n\n          var i = 1; //  set your counter to 1\n\n          function myLoop() {\n            //  create a loop function\n            setTimeout(function () {\n              //  call a 3s setTimeout when the loop is called\n              var responsePromiseDetails = fetch(\"\".concat(playlist.tracks.href, \"?offset=\").concat(i, \"00\"), {\n                headers: {\n                  'Authorization': 'Bearer ' + accessToken\n                }\n              }).then(function (response) {\n                return response.json();\n              });\n              responsePromise.push(responsePromiseDetails);\n              i++; //  increment the counter\n\n              if (i < 5) {\n                //  if the counter < 10, call the loop function\n                myLoop(); //  ..  again which will trigger another \n              } //  ..  setTimeout()\n\n            }, 6000);\n          }\n\n          myLoop(); // for (let i = 1; i < 10; i++) {\n          //   setTimeout(function timer() {\n          //     alert(\"hello world\");\n          //   }, i * 3000);\n          // }\n\n          [0, 1, 2].forEach(function (page) {\n            var responsePromiseDetails = fetch(\"\".concat(playlist.tracks.href, \"?offset=\").concat(page, \"00\"), {\n              headers: {\n                'Authorization': 'Bearer ' + accessToken\n              }\n            }).then(function (response) {\n              return response.json();\n            });\n            responsePromise.push(responsePromiseDetails);\n          });\n          var trackDataPromise = Promise.all(responsePromise);\n          return trackDataPromise;\n        });\n        var allTracksDataPromises = Promise.all(trackDataPromises);\n        var playlistsPromise = allTracksDataPromises.then(function (trackDatasArrays) {\n          trackDatasArrays.map(function (trackDatas, index) {\n            var trackDatasPushed = [];\n            trackDatas.map(function (track) {\n              return trackDatasPushed.push(track.items);\n            });\n\n            var flatten = function flatten(array) {\n              var _ref;\n\n              return Array.isArray(array) ? (_ref = []).concat.apply(_ref, _toConsumableArray(array.map(flatten))) : array;\n            };\n\n            var trackDatasFlatten = flatten(trackDatasPushed);\n            var playlistTrackData = [];\n            trackDatasFlatten.forEach(function (trackData, i) {\n              var playlistSong = {\n                name: trackData.track.name,\n                duration: trackData.track.duration_ms / 1000\n              };\n              playlistTrackData.push(playlistSong);\n            });\n            return playlists[index].trackDatas = playlistTrackData;\n          });\n          return playlists;\n        });\n        return playlistsPromise;\n      }).then(function (playlists) {\n        console.log(playlists);\n\n        _this3.setState({\n          playlists: playlists.map(function (item) {\n            return {\n              name: item.name,\n              songs: item.trackDatas,\n              imageUrl: item.images[0].url\n            };\n          })\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.state.playlists);\n      var playlistsToRender = this.state.user && this.state.playlists ? this.state.playlists.filter(function (playlist) {\n        var matchesPlaylist = playlist.name.toLowerCase().includes(_this4.state.filterString.toLowerCase());\n        var matchesSong = playlist.songs.find(function (song) {\n          return song.name.toLowerCase().includes(_this4.state.filterString.toLowerCase());\n        });\n        return matchesPlaylist || matchesSong;\n      }) : [];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, this.state.user.name, \"'s playlist\"), React.createElement(DownloadPlaylist, {\n        playlists: this.state.playlists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(PlaylistCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(HoursCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        onTextChange: function onTextChange(text) {\n          return _this4.setState({\n            filterString: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), playlistsToRender.map(function (playlist) {\n        return React.createElement(Playlist, {\n          playlist: playlist,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        });\n      })) : React.createElement(\"button\", {\n        onClick: function onClick() {\n          return window.location = 'http://localhost:8888/login';\n        },\n        style: {\n          'fontSize': '16px',\n          'padding': '16px 32px',\n          'backgroundColor': '#1CD156',\n          'marginTop': '64px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Sign In with Spotify\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js"],"names":["React","Component","CSVLink","DownloadPlaylist","defaultTextColor","defaultStyle","color","PlaylistCounter","width","display","props","playlists","length","HoursCounter","allSongs","reduce","songs","eachPlaylist","concat","totalDuration","sum","eachSong","duration","Math","round","Filter","e","onTextChange","target","value","Playlist","playlist","imageUrl","name","slice","map","song","App","state","serverData","filterString","accessToken","URLSearchParams","window","location","search","get","fetch","headers","then","response","json","data","setState","user","display_name","playlistData","items","trackDataPromises","responsePromise","i","myLoop","setTimeout","responsePromiseDetails","tracks","href","push","forEach","page","trackDataPromise","Promise","all","allTracksDataPromises","playlistsPromise","trackDatasArrays","trackDatas","index","trackDatasPushed","track","flatten","array","Array","isArray","trackDatasFlatten","playlistTrackData","trackData","playlistSong","duration_ms","console","log","item","images","url","playlistsToRender","filter","matchesPlaylist","toLowerCase","includes","matchesSong","find","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport { CSVLink } from 'react-csv';\nimport DownloadPlaylist from './DownloadPlaylist';\n// import querystring from 'query-string';\n\n\n\nlet defaultTextColor = \"red\";\nlet defaultStyle = {\n  color: defaultTextColor\n}\n\n\nclass PlaylistCounter extends Component {\n  render() {\n    return (\n      <div style={{ ...defaultStyle, width: '40%', display: 'inline-block' }}>\n        <h2 style={defaultStyle}>\n          {this.props.playlists.length} playlists\n          </h2>\n      </div >\n    );\n  }\n}\n\nclass HoursCounter extends Component {\n  render() {\n    let allSongs = this.props.playlists.reduce((songs, eachPlaylist) => {\n      return songs.concat(eachPlaylist.songs)\n    }, []);\n\n    let totalDuration = allSongs.reduce((sum, eachSong) => {\n      return sum + eachSong.duration;\n    }, 0)\n    return (\n      <div style={{ ...defaultStyle, width: '40%', display: 'inline-block' }}>\n        <h2 style={defaultStyle}>\n          {Math.round(totalDuration / 60)} Hours\n        </h2>\n      </div >\n    );\n  }\n}\n\nclass Filter extends Component {\n  render() {\n    return (\n      <div style={defaultStyle}>\n        <img src=\"\" alt=\"\" />\n        <input type=\"text\" onKeyUp=\n          {e => this.props.onTextChange(e.target.value)} />\n      </div>\n    );\n  }\n}\n\nclass Playlist extends Component {\n  render() {\n    let playlist = this.props.playlist;\n    return (\n      <div style={{ ...defaultStyle, width: '25%', display: 'inline-block' }}>\n        <img src={playlist.imageUrl} alt=\"\" style={{ width: '160px' }} />\n        <h3>{playlist.name}</h3>\n        <ul>\n          {playlist.songs.slice(0, 3).map(song =>\n            <li>{song.name}</li>\n          )}\n        </ul>\n      </div>\n\n    );\n  }\n}\n\n// class DownloadPlaylist extends Component {\n//   render() {\n//     let playlists = this.props.playlists\n//     // let songs = playlistsSongs[0].songs\n\n//     if (this.props.playlists) {\n//       let playlistsToDownload = []\n//       playlists.forEach(playlist => {\n//         let playlistToDownload = []\n//         playlistToDownload.push(playlist.name)\n//         playlist.songs.forEach(song => {\n//           playlistToDownload.push(song.name)\n//         })\n//         playlistsToDownload.push(playlistToDownload)\n//       })\n//       console.log(playlistsToDownload)\n//       return (\n//         < CSVLink data={playlistsToDownload}\n//           filename={\"my-file.csv\"}\n//           target=\"_blank\" >\n//           Download playlists as CSV\n//         </CSVLink >\n//       )\n//     }\n//     return (null)\n//   }\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      filterString: ''\n    }\n  }\n\n  componentDidMount() {\n\n    let accessToken = new URLSearchParams(window.location.search).get('access_token');\n    if (!accessToken) return;\n\n    fetch('https://api.spotify.com/v1/me', {\n      headers: { 'Authorization': 'Bearer ' + accessToken }\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          user: {\n            name: data.display_name\n          }\n        })\n      })\n\n    fetch(`https://api.spotify.com/v1/me/playlists?limit=49`, {\n      headers: { 'Authorization': 'Bearer ' + accessToken }\n    }).then(response => response.json())\n      .then(playlistData => {\n        let playlists = playlistData.items\n        let trackDataPromises = playlists.map(playlist => {\n          // let responsePromise = fetch(`${playlist.tracks.href}?offset=100`, {\n          //   headers: { 'Authorization': 'Bearer ' + accessToken }\n          // })\n          let responsePromise = [];\n          // function fetchData(page) {\n          //   let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n          //     headers: { 'Authorization': 'Bearer ' + accessToken }\n          //   }).then(response => response.json())\n          //   responsePromise.push(responsePromiseDetails)\n          // }\n          // for (let i = 1; i < 6; i++) {\n          //   setTimeout(fetchData(i), 50000)\n          // }\n\n          // function fetchData(page) {\n          //   console.log(`hello ${page}`)\n          // }\n          // for (let i = 1; i < 6; i++) {\n          //   setTimeout(fetchData(i), i * 1000)\n          // }\n\n          let i = 1;                     //  set your counter to 1\n\n          function myLoop() {           //  create a loop function\n            setTimeout(function () {    //  call a 3s setTimeout when the loop is called\n              let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${i}00`, {\n                headers: { 'Authorization': 'Bearer ' + accessToken }\n              }).then(response => response.json())\n              responsePromise.push(responsePromiseDetails);\n              i++;                     //  increment the counter\n              if (i < 5) {            //  if the counter < 10, call the loop function\n                myLoop();             //  ..  again which will trigger another \n              }                        //  ..  setTimeout()\n            }, 6000)\n          }\n\n          myLoop();\n\n\n\n          // for (let i = 1; i < 10; i++) {\n          //   setTimeout(function timer() {\n          //     alert(\"hello world\");\n          //   }, i * 3000);\n          // }\n\n          [0, 1, 2].forEach(page => {\n            let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n              headers: { 'Authorization': 'Bearer ' + accessToken }\n            }).then(response => response.json())\n            responsePromise.push(responsePromiseDetails)\n          })\n          let trackDataPromise = Promise.all(responsePromise)\n          return trackDataPromise\n        })\n        let allTracksDataPromises =\n          Promise.all(trackDataPromises)\n        let playlistsPromise = allTracksDataPromises.then(trackDatasArrays => {\n          trackDatasArrays.map((trackDatas, index) => {\n            let trackDatasPushed = [];\n            trackDatas.map(track => {\n              return trackDatasPushed.push(track.items)\n            })\n            let flatten = array => Array.isArray(array)\n              ? [].concat(...array.map(flatten))\n              : array\n            let trackDatasFlatten = flatten(trackDatasPushed)\n            let playlistTrackData = []\n            trackDatasFlatten.forEach((trackData, i) => {\n              let playlistSong = {\n                name: trackData.track.name,\n                duration: trackData.track.duration_ms / 1000\n              }\n              playlistTrackData.push(playlistSong)\n            })\n            return playlists[index].trackDatas = playlistTrackData\n          })\n          return playlists\n        })\n        return playlistsPromise\n      })\n      .then(playlists => {\n        console.log(playlists)\n        this.setState({\n          playlists: playlists.map(item => {\n            return {\n              name: item.name,\n              songs: item.trackDatas,\n              imageUrl: item.images[0].url\n            }\n          }\n          )\n        })\n      })\n  }\n\n  render() {\n    console.log(this.state.playlists)\n    let playlistsToRender =\n      this.state.user &&\n        this.state.playlists\n        ? this.state.playlists.filter(playlist => {\n          let matchesPlaylist = playlist.name.toLowerCase().includes(\n            this.state.filterString.toLowerCase())\n          let matchesSong = playlist.songs.find(song =>\n            song.name.toLowerCase().includes(this.state.filterString.toLowerCase()))\n          return matchesPlaylist || matchesSong\n        }) : []\n    return (\n      <div className=\"App\">\n        {this.state.user ?\n          <div>\n            <h1 >\n              {this.state.user.name}'s playlist\n            </h1>\n            <DownloadPlaylist playlists={this.state.playlists} />\n            <PlaylistCounter playlists={playlistsToRender} />\n            <HoursCounter playlists={playlistsToRender} />\n            <Filter onTextChange={text => this.setState({ filterString: text })} />\n            {playlistsToRender.map(playlist =>\n              <Playlist playlist={playlist} />\n            )}\n\n          </div> : <button onClick={() => window.location = 'http://localhost:8888/login'}\n            style={{ 'fontSize': '16px', 'padding': '16px 32px', 'backgroundColor': '#1CD156', 'marginTop': '64px' }}>Sign In with Spotify</button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}