{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/Playlist.js\";\nimport React, { Component } from 'react';\nimport '../css/Playlist.css';\n\nvar TagManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TagManager, _Component);\n\n  function TagManager(props) {\n    var _this;\n\n    _classCallCheck(this, TagManager);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TagManager).call(this, props));\n\n    _this.handleChange = function (event) {\n      var tag = event.target.value;\n\n      _this.setState({\n        tag: tag\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.addTag(_this.props.index, _this.state.tag);\n\n      _this.setState({\n        tag: ''\n      });\n    };\n\n    _this.state = {\n      tag: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TagManager, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        id: \"submitForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.tag,\n        name: \"tagInput\",\n        className: \"tagInput\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"tagInput\",\n        onSubmit: this.handleClearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TagManager;\n}(Component);\n\nvar Playlist =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Playlist, _Component2);\n\n  function Playlist() {\n    _classCallCheck(this, Playlist);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Playlist).apply(this, arguments));\n  }\n\n  _createClass(Playlist, [{\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlist;\n      var hasTags = playlist.tags === undefined ? false : true;\n      console.log(hasTags);\n      var tagList;\n\n      if (hasTags) {\n        tagList = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Tags: \", playlist.tags.map(function (tag) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, tag);\n        }));\n      }\n\n      console.log(tagList);\n      return React.createElement(\"div\", {\n        className: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: playlist.imageUrl,\n        alt: \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, playlist.name), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, playlist.songs.slice(0, 3).map(function (song) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, song.name);\n      })), tagList, React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"cta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"see playlist\")), React.createElement(TagManager, {\n        addTag: this.props.addTag,\n        index: this.props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Playlist;\n}(Component);\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/Playlist.js"],"names":["React","Component","TagManager","props","handleChange","event","tag","target","value","setState","handleSubmit","preventDefault","addTag","index","state","bind","handleClearForm","Playlist","playlist","hasTags","tags","undefined","console","log","tagList","map","imageUrl","name","songs","slice","song"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../css/Playlist.css';\n\n\n\nclass TagManager extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tag: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange = (event) => {\n    let tag = event.target.value\n    this.setState({ tag })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.addTag(this.props.index, this.state.tag)\n    this.setState({ tag: '' })\n  }\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} id=\"submitForm\">\n        <label>\n          <input type=\"text\"\n            value={this.state.tag}\n            name=\"tagInput\"\n            className=\"tagInput\"\n            onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"submit\" className=\"tagInput\" onSubmit={this.handleClearForm} />\n      </form>\n    );\n  }\n}\n\nclass Playlist extends Component {\n  render() {\n    let playlist = this.props.playlist;\n    let hasTags = playlist.tags === undefined ? false : true\n    console.log(hasTags)\n    let tagList;\n\n    if (hasTags) {\n      tagList = <div>Tags: {playlist.tags.map(tag =>\n\n        <span>{tag}</span>\n      )}</div>\n    }\n\n    console.log(tagList)\n\n    return (\n      <div className=\"playlist\">\n        <img src={playlist.imageUrl} alt=\"playlist\" />\n        <h3>{playlist.name}</h3>\n        <ul>\n          {playlist.songs.slice(0, 3).map(song =>\n            <li>{song.name}</li>\n          )}\n        </ul>\n        {tagList}\n        <div className=\"buttons\">\n          <p className=\"cta\">see playlist</p>\n        </div>\n        <TagManager addTag={this.props.addTag} index={this.props.index} />\n\n\n      </div>\n\n    );\n  }\n}\n\nexport default Playlist;"]},"metadata":{},"sourceType":"module"}