{"ast":null,"code":"import _toConsumableArray from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js\";\nimport React, { Component } from 'react';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport Playlist from './Playlist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport '../css/App.css'; // import querystring from 'query-string';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.addTag = function (index, tag) {\n      var playlists = _this.state.playlists;\n      playlists[index].tags ? playlists[index].tags.push(tag) : playlists[index].tags = [tag];\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.addRating = function (index, rating) {\n      var playlists = _this.state.playlists;\n      playlists[index].rating = rating;\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.state = {\n      serverData: {},\n      filterString: '' // this.addTag = this.addTag.bind(this)\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accessToken = new URLSearchParams(window.location.search).get('access_token');\n      if (!accessToken) return;\n      fetch('https://api.spotify.com/v1/me', {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          user: {\n            name: data.display_name\n          }\n        });\n      });\n      fetch(\"https://api.spotify.com/v1/me/playlists?limit=49\", {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (playlistData) {\n        var playlists = playlistData.items;\n        var trackDataPromises = playlists.map(function (playlist) {\n          var responsePromise = []; // let i = 1;                     //  set your counter to 1\n          // function fetchPlaylistTracks() {           //  create a loop function\n          //   setTimeout(function () {\n          //     let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${i}00`, {\n          //       headers: { 'Authorization': 'Bearer ' + accessToken }\n          //     }).then(response => response.json())\n          //     console.log(responsePromiseDetails)\n          //     responsePromise.push(responsePromiseDetails);\n          //     i++;\n          //     if (i < 5) {\n          //       fetchPlaylistTracks();\n          //     }\n          //   }, 6000)\n          // }\n          // fetchPlaylistTracks();\n\n          [0, 1, 2].forEach(function (page) {\n            var responsePromiseDetails = fetch(\"\".concat(playlist.tracks.href, \"?offset=\").concat(page, \"00\"), {\n              headers: {\n                'Authorization': 'Bearer ' + accessToken\n              }\n            }).then(function (response) {\n              return response.json();\n            });\n            responsePromise.push(responsePromiseDetails);\n          });\n          var trackDataPromise = Promise.all(responsePromise);\n          return trackDataPromise;\n        });\n        var allTracksDataPromises = Promise.all(trackDataPromises);\n        var playlistsPromise = allTracksDataPromises.then(function (trackDatasArrays) {\n          trackDatasArrays.map(function (trackDatas, index) {\n            var trackDatasPushed = [];\n            trackDatas.map(function (track) {\n              return trackDatasPushed.push(track.items);\n            });\n\n            var flatten = function flatten(array) {\n              var _ref;\n\n              return Array.isArray(array) ? (_ref = []).concat.apply(_ref, _toConsumableArray(array.map(flatten))) : array;\n            };\n\n            var trackDatasFlatten = flatten(trackDatasPushed);\n            var playlistTrackData = [];\n            trackDatasFlatten.forEach(function (trackData, i) {\n              var playlistSong = {\n                name: trackData.track.name,\n                duration: trackData.track.duration_ms / 1000\n              };\n              playlistTrackData.push(playlistSong);\n            });\n            return playlists[index].trackDatas = playlistTrackData;\n          });\n          return playlists;\n        });\n        return playlistsPromise;\n      }).then(function (playlists) {\n        _this2.setState({\n          playlists: playlists.map(function (item) {\n            return {\n              name: item.name,\n              songs: item.trackDatas,\n              imageUrl: item.images[0].url\n            };\n          })\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var playlistsToRender = this.state.user && this.state.playlists ? this.state.playlists.filter(function (playlist) {\n        var matchesPlaylist = playlist.name.toLowerCase().includes(_this3.state.filterString.toLowerCase());\n        var matchesSong = playlist.songs.find(function (song) {\n          return song.name.toLowerCase().includes(_this3.state.filterString.toLowerCase());\n        });\n        return matchesPlaylist || matchesSong;\n      }) : [];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.state.user.name, \"'s playlist\"), React.createElement(DownloadPlaylist, {\n        playlists: this.state.playlists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(PlaylistCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(HoursCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        onTextChange: function onTextChange(text) {\n          return _this3.setState({\n            filterString: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"playlistGrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, playlistsToRender.map(function (playlist, key) {\n        return React.createElement(Playlist, {\n          playlist: playlist,\n          addTag: _this3.addTag,\n          key: key,\n          index: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      }))) : React.createElement(\"button\", {\n        onClick: function onClick() {\n          return window.location = 'http://localhost:8888/login';\n        },\n        style: {\n          'fontSize': '16px',\n          'padding': '16px 32px',\n          'backgroundColor': '#1CD156',\n          'marginTop': '64px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Sign In with Spotify\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js"],"names":["React","Component","DownloadPlaylist","Playlist","HoursCounter","Filter","PlaylistCounter","App","addTag","index","tag","playlists","state","tags","push","setState","addRating","rating","serverData","filterString","accessToken","URLSearchParams","window","location","search","get","fetch","headers","then","response","json","data","user","name","display_name","playlistData","items","trackDataPromises","map","playlist","responsePromise","forEach","page","responsePromiseDetails","tracks","href","trackDataPromise","Promise","all","allTracksDataPromises","playlistsPromise","trackDatasArrays","trackDatas","trackDatasPushed","track","flatten","array","Array","isArray","concat","trackDatasFlatten","playlistTrackData","trackData","i","playlistSong","duration","duration_ms","item","songs","imageUrl","images","url","playlistsToRender","filter","matchesPlaylist","toLowerCase","includes","matchesSong","find","song","text","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport Playlist from './Playlist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport '../css/App.css';\n\n// import querystring from 'query-string';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      filterString: ''\n    }\n\n    // this.addTag = this.addTag.bind(this)\n  }\n\n  addTag = (index, tag) => {\n    let playlists = this.state.playlists\n    playlists[index].tags ? playlists[index].tags.push(tag)\n      : playlists[index].tags = [tag]\n    this.setState({ playlists })\n  }\n\n  addRating = (index, rating) => {\n    let playlists = this.state.playlists\n    playlists[index].rating = rating\n    this.setState({ playlists })\n  }\n\n  componentDidMount() {\n\n    let accessToken = new URLSearchParams(window.location.search).get('access_token');\n    if (!accessToken) return;\n\n    fetch('https://api.spotify.com/v1/me', {\n      headers: { 'Authorization': 'Bearer ' + accessToken }\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          user: {\n            name: data.display_name\n          }\n        })\n      })\n\n    fetch(`https://api.spotify.com/v1/me/playlists?limit=49`, {\n      headers: { 'Authorization': 'Bearer ' + accessToken }\n    }).then(response => response.json())\n      .then(playlistData => {\n        let playlists = playlistData.items\n        let trackDataPromises = playlists.map(playlist => {\n          let responsePromise = [];\n          // let i = 1;                     //  set your counter to 1\n          // function fetchPlaylistTracks() {           //  create a loop function\n          //   setTimeout(function () {\n          //     let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${i}00`, {\n          //       headers: { 'Authorization': 'Bearer ' + accessToken }\n          //     }).then(response => response.json())\n          //     console.log(responsePromiseDetails)\n          //     responsePromise.push(responsePromiseDetails);\n          //     i++;\n          //     if (i < 5) {\n          //       fetchPlaylistTracks();\n          //     }\n          //   }, 6000)\n          // }\n          // fetchPlaylistTracks();\n          [0, 1, 2].forEach(page => {\n            let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n              headers: { 'Authorization': 'Bearer ' + accessToken }\n            }).then(response => response.json())\n            responsePromise.push(responsePromiseDetails)\n          })\n          let trackDataPromise = Promise.all(responsePromise)\n          return trackDataPromise\n        })\n        let allTracksDataPromises =\n          Promise.all(trackDataPromises)\n        let playlistsPromise = allTracksDataPromises.then(trackDatasArrays => {\n          trackDatasArrays.map((trackDatas, index) => {\n            let trackDatasPushed = [];\n            trackDatas.map(track => {\n              return trackDatasPushed.push(track.items)\n            })\n            let flatten = array => Array.isArray(array)\n              ? [].concat(...array.map(flatten))\n              : array\n            let trackDatasFlatten = flatten(trackDatasPushed)\n            let playlistTrackData = []\n            trackDatasFlatten.forEach((trackData, i) => {\n              let playlistSong = {\n                name: trackData.track.name,\n                duration: trackData.track.duration_ms / 1000\n              }\n              playlistTrackData.push(playlistSong)\n            })\n            return playlists[index].trackDatas = playlistTrackData\n          })\n          return playlists\n        })\n        return playlistsPromise\n      })\n      .then(playlists => {\n        this.setState({\n          playlists: playlists.map(item => {\n            return {\n              name: item.name,\n              songs: item.trackDatas,\n              imageUrl: item.images[0].url\n            }\n          }\n          )\n        })\n      })\n  }\n\n  render() {\n    let playlistsToRender =\n      this.state.user &&\n        this.state.playlists\n        ? this.state.playlists.filter(playlist => {\n          let matchesPlaylist = playlist.name.toLowerCase().includes(\n            this.state.filterString.toLowerCase())\n          let matchesSong = playlist.songs.find(song =>\n            song.name.toLowerCase().includes(this.state.filterString.toLowerCase()))\n          return matchesPlaylist || matchesSong\n        }) : []\n    return (\n      <div className=\"App\">\n        {this.state.user ?\n          <div>\n            <h1 >\n              {this.state.user.name}'s playlist\n            </h1>\n            <DownloadPlaylist playlists={this.state.playlists} />\n            <PlaylistCounter playlists={playlistsToRender} />\n            <HoursCounter playlists={playlistsToRender} />\n            <Filter onTextChange={text => this.setState({ filterString: text })} />\n            <div className=\"playlistGrid\">\n              {playlistsToRender.map((playlist, key) =>\n                <Playlist playlist={playlist} addTag={this.addTag} key={key} index={key} />\n              )}\n            </div>\n\n\n          </div> : <button onClick={() => window.location = 'http://localhost:8888/login'}\n            style={{ 'fontSize': '16px', 'padding': '16px 32px', 'backgroundColor': '#1CD156', 'marginTop': '64px' }}>Sign In with Spotify</button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}