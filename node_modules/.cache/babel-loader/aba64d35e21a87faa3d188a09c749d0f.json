{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js\";\n//packages\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; // components \n\nimport PlaylistsListing from './PlaylistsListing';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport LoginPage from './LoginPage';\nimport PlaylistPage from './PlaylistPage'; // js \n\nimport { fetchPlaylistInfos, fetchPlaylistData } from '../api/fetchData'; // css\n\nimport '../css/App.css'; // import querystring from 'query-string';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.addTag = function (index, tag) {\n      var playlists = _this.state.playlists;\n      playlists[index].tags ? playlists[index].tags.push(tag) : playlists[index].tags = [tag];\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.addPlaylistRating = function (index, rating) {\n      var playlists = _this.state.playlists;\n      playlists.find(function (playlist) {\n        return playlist.index === index;\n      }).rating = rating;\n      console.log(playlists);\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.updateFilteredRating = function (rating) {\n      var filterRating = _this.state.filterRating;\n      filterRating = rating;\n\n      _this.setState({\n        filterRating: filterRating\n      });\n    };\n\n    _this.resetRateFiltering = function (event) {\n      _this.setState({\n        filterRating: 0\n      });\n    };\n\n    _this.state = {\n      serverData: {},\n      filterString: '',\n      filterRating: 0\n    };\n    _this.resetRateFiltering = _this.resetRateFiltering.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addPlaylistRating = _this.addPlaylistRating.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accessToken = new URLSearchParams(window.location.search).get('access_token');\n      if (!accessToken) return;\n      fetchPlaylistInfos(accessToken).then(function (data) {\n        _this2.setState({\n          user: {\n            name: data.display_name\n          }\n        });\n      });\n      fetchPlaylistData(accessToken).then(function (playlists) {\n        _this2.setState({\n          playlists: playlists.map(function (item, index) {\n            return {\n              name: item.name,\n              songs: item.trackDatas,\n              imageUrl: item.images[0].url,\n              rating: 0,\n              index: index\n            };\n          })\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var playlistsToRender = this.state.user && this.state.playlists ? this.state.playlists.filter(function (playlist) {\n        var matchesPlaylist = playlist.name.toLowerCase().includes(_this3.state.filterString.toLowerCase());\n        var matchesSong = playlist.songs.find(function (song) {\n          return song.name.toLowerCase().includes(_this3.state.filterString.toLowerCase());\n        });\n        return matchesPlaylist || matchesSong;\n      }).filter(function (playlist) {\n        // let matcheRating = playlist.rating === this.state.filterRating\n        // return matcheRating\n        var matcheRating;\n\n        if (_this3.state.filterRating !== 0) {\n          matcheRating = playlist.rating === _this3.state.filterRating;\n          return matcheRating;\n        } else {\n          matcheRating = playlist;\n        }\n\n        return matcheRating;\n      }) : [];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.user.name, \"'s playlist\"), React.createElement(DownloadPlaylist, {\n        playlists: this.state.playlists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(PlaylistCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(HoursCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        onTextChange: function onTextChange(text) {\n          return _this3.setState({\n            filterString: text\n          });\n        },\n        updateFilteredRating: this.updateFilteredRating,\n        resetRateFiltering: this.resetRateFiltering,\n        ratingFilterValue: this.state.filterRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(PlaylistsListing, Object.assign({}, props, {\n            playlists: playlistsToRender,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/:playlistId\",\n        render: function render(props) {\n          return React.createElement(PlaylistPage, Object.assign({}, props, {\n            playlists: playlistsToRender,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))))) : React.createElement(LoginPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","PlaylistsListing","DownloadPlaylist","HoursCounter","Filter","PlaylistCounter","LoginPage","PlaylistPage","fetchPlaylistInfos","fetchPlaylistData","App","addTag","index","tag","playlists","state","tags","push","setState","addPlaylistRating","rating","find","playlist","console","log","updateFilteredRating","filterRating","resetRateFiltering","event","serverData","filterString","bind","accessToken","URLSearchParams","window","location","search","get","then","data","user","name","display_name","map","item","songs","trackDatas","imageUrl","images","url","playlistsToRender","filter","matchesPlaylist","toLowerCase","includes","matchesSong","song","matcheRating","text","props"],"mappings":"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","sourcesContent":["//packages\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// components \nimport PlaylistsListing from './PlaylistsListing'\nimport DownloadPlaylist from './DownloadPlaylist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport LoginPage from './LoginPage';\nimport PlaylistPage from './PlaylistPage';\n\n// js \n\nimport { fetchPlaylistInfos, fetchPlaylistData } from '../api/fetchData'\n\n// css\nimport '../css/App.css';\n\n// import querystring from 'query-string';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      filterString: '',\n      filterRating: 0,\n    }\n\n    this.resetRateFiltering = this.resetRateFiltering.bind(this);\n    this.addPlaylistRating = this.addPlaylistRating.bind(this);\n  }\n\n\n\n  addTag = (index, tag) => {\n    let playlists = this.state.playlists\n    playlists[index].tags ? playlists[index].tags.push(tag)\n      : playlists[index].tags = [tag]\n    this.setState({ playlists })\n  }\n\n  addPlaylistRating = (index, rating) => {\n    let playlists = this.state.playlists\n    playlists.find(playlist => playlist.index === index).rating = rating\n    console.log(playlists)\n    this.setState({ playlists })\n  }\n\n  updateFilteredRating = (rating) => {\n    let filterRating = this.state.filterRating\n    filterRating = rating\n    this.setState({ filterRating })\n  }\n\n  resetRateFiltering = (event) => {\n    this.setState({ filterRating: 0 })\n  }\n\n  componentDidMount() {\n\n    let accessToken = new URLSearchParams(window.location.search).get('access_token');\n    if (!accessToken) return;\n\n    fetchPlaylistInfos(accessToken).then(data => {\n      this.setState({\n        user: {\n          name: data.display_name\n        }\n      })\n    })\n\n    fetchPlaylistData(accessToken).then(playlists => {\n      this.setState({\n        playlists: playlists.map((item, index) => {\n          return {\n            name: item.name,\n            songs: item.trackDatas,\n            imageUrl: item.images[0].url,\n            rating: 0,\n            index: index\n          }\n        }\n        )\n      })\n    })\n  }\n\n  render() {\n    let playlistsToRender =\n      this.state.user &&\n        this.state.playlists\n        ? this.state.playlists.filter(playlist => {\n          let matchesPlaylist = playlist.name.toLowerCase().includes(\n            this.state.filterString.toLowerCase())\n          let matchesSong = playlist.songs.find(song =>\n            song.name.toLowerCase().includes(this.state.filterString.toLowerCase()))\n          return matchesPlaylist || matchesSong\n        }).filter(playlist => {\n          // let matcheRating = playlist.rating === this.state.filterRating\n          // return matcheRating\n          let matcheRating;\n          if (this.state.filterRating !== 0) {\n            matcheRating = playlist.rating === this.state.filterRating\n            return matcheRating\n          } else {\n            matcheRating = playlist\n          }\n          return matcheRating\n        }) : []\n    return (\n      <div className=\"App\">\n        {this.state.user ?\n          <div>\n            <h1 >\n              {this.state.user.name}'s playlist\n            </h1>\n            <DownloadPlaylist\n              playlists={this.state.playlists}\n            />\n            <PlaylistCounter\n              playlists={playlistsToRender}\n            />\n            <HoursCounter\n              playlists={playlistsToRender}\n            />\n            <Filter\n              onTextChange={text => this.setState({ filterString: text })}\n              updateFilteredRating={this.updateFilteredRating}\n              resetRateFiltering={this.resetRateFiltering}\n              ratingFilterValue={this.state.filterRating}\n            />\n            <BrowserRouter>\n              <div>\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/\"\n                    render={(props) => <PlaylistsListing {...props} playlists={playlistsToRender} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/:playlistId\"\n                    render={(props) => <PlaylistPage {...props} playlists={playlistsToRender} />}\n                  />\n                </Switch>\n              </div>\n            </BrowserRouter>\n          </div> : <LoginPage />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}