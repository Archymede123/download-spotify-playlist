{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/PlaylistPage.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Button from './UI-components/Button'; // css\n\nimport '../css/PlaylistPage.css';\nvar spotifyApi = new SpotifyWebApi();\n\nvar PlaylistPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistPage, _Component);\n\n  function PlaylistPage() {\n    var _this;\n\n    _classCallCheck(this, PlaylistPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaylistPage).call(this));\n\n    _this.handleBackButton = function () {\n      _this.props.history.push(\"/\");\n    };\n\n    _this.triggerPlaylist = function () {\n      var uri = {\n        \"context_uri\": _this.state.playlist.uri\n      };\n      spotifyApi.play(uri);\n    };\n\n    _this.playBlindtest = function (event) {\n      var blindtestGuess = event.currentTarget.value;\n      var currentSong = spotifyApi.getMyCurrentPlaybackState().then(function (response) {\n        return response.item.name;\n      });\n      console.log(currentSong);\n    };\n\n    _this.state = {\n      playlist: {}\n    };\n    return _this;\n  }\n\n  _createClass(PlaylistPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var playlistIndex = this.props.match.params.playlistId.match(/\\d/);\n      var playlist = this.props.playlists.find(function (playlist) {\n        return playlist.index.toString() === playlistIndex[0];\n      });\n      this.setState({\n        playlist: playlist\n      });\n      spotifyApi.setAccessToken(this.props.access_token);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playlist = this.state.playlist;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Button, {\n        content: \"Back to playlist list\",\n        onClick: this.handleBackButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, playlist.name), React.createElement(Button, {\n        content: \"Play\",\n        onClick: this.triggerPlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"blindest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"answer-input\",\n        type: \"text\",\n        onKeyUp: this.playBlindtest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), playlist.songs ? React.createElement(\"ul\", {\n        className: \"song-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" \", playlist.songs.map(function (song, key) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, song.name);\n      }), \" \") : null);\n    }\n  }]);\n\n  return PlaylistPage;\n}(Component);\n\nexport default PlaylistPage;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/PlaylistPage.js"],"names":["React","Component","SpotifyWebApi","Button","spotifyApi","PlaylistPage","handleBackButton","props","history","push","triggerPlaylist","uri","state","playlist","play","playBlindtest","event","blindtestGuess","currentTarget","value","currentSong","getMyCurrentPlaybackState","then","response","item","name","console","log","playlistIndex","match","params","playlistId","playlists","find","index","toString","setState","setAccessToken","access_token","songs","map","song","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Button from './UI-components/Button';\n\n// css\nimport '../css/PlaylistPage.css';\n\nconst spotifyApi = new SpotifyWebApi();\n\n\n\nclass PlaylistPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playlist: {}\n        }\n    }\n\n    handleBackButton = () => {\n        this.props.history.push(`/`)\n    }\n\n    triggerPlaylist = () => {\n\n        const uri = {\n            \"context_uri\": this.state.playlist.uri,\n        }\n        spotifyApi.play(uri)\n    }\n\n    playBlindtest = (event) => {\n        let blindtestGuess = event.currentTarget.value\n        let currentSong = spotifyApi.getMyCurrentPlaybackState()\n            .then(response => {\n                return response.item.name\n            })\n        console.log(currentSong)\n    }\n\n    componentDidMount() {\n        let playlistIndex = this.props.match.params.playlistId.match(/\\d/)\n        let playlist = this.props.playlists.find(playlist =>\n            playlist.index.toString() === playlistIndex[0]\n        )\n        this.setState({ playlist })\n        spotifyApi.setAccessToken(this.props.access_token)\n    }\n\n    render() {\n        let playlist = this.state.playlist\n        return (\n            <div>\n                <Button content=\"Back to playlist list\" onClick={this.handleBackButton} />\n                <div>\n                    <p>{playlist.name}</p>\n                    <Button content=\"Play\" onClick={this.triggerPlaylist} />\n                </div>\n                <div className=\"blindest\">\n                    <input className=\"answer-input\" type=\"text\" onKeyUp=\n                        {this.playBlindtest} />\n                </div>\n                {playlist.songs ?\n                    <ul className=\"song-list\"> {playlist.songs.map((song, key) =>\n                        <li key={key}>{song.name}</li>\n                    )} </ul>\n                    : null\n                }\n            </div>\n\n\n        );\n    }\n}\n\nexport default PlaylistPage;"]},"metadata":{},"sourceType":"module"}