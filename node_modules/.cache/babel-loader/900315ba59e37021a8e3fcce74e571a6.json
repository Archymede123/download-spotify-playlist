{"ast":null,"code":"import _toConsumableArray from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/PlaylistPicker.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js'; // my components \n// import PlaylistCard from '../PlaylistCard';\n\nimport PlaylistPickerCards from './PlaylistPickerCards'; // content\n\nimport spotifyPlaylists from './SpotifyPlaylists';\nvar spotifyApi = new SpotifyWebApi();\n\nvar PlaylistPicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistPicker, _Component);\n\n  function PlaylistPicker(props) {\n    var _this;\n\n    _classCallCheck(this, PlaylistPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaylistPicker).call(this, props));\n\n    _this.selectPlaylist = function (selectedPlaylist) {\n      _this.setState({\n        selectedPlaylist: selectedPlaylist\n      });\n\n      _this.props.selectPlaylist(selectedPlaylist);\n    };\n\n    _this.state = {\n      spotifyPlaylists: spotifyPlaylists,\n      playlistsToRender: []\n    };\n    return _this;\n  }\n\n  _createClass(PlaylistPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      spotifyApi.setAccessToken(this.props.access_token);\n      spotifyPlaylists.map(function (playlist) {\n        var id = playlist.uri.match(/[^:]*$/);\n        return spotifyApi.getPlaylist(id).then(function (playlistResponse) {\n          console.log(playlistResponse);\n          var tracks = playlistResponse.tracks.items.map(function (track) {\n            var artistId = track.track.artists[0].id;\n            var genres = spotifyApi.getArtist(artistId).then(function (artistResponse) {\n              console.log(artistResponse.genres);\n              return artistResponse.genres;\n            }); // console.log(genres)\n\n            var trackData = {\n              name: track.track.name,\n              genres: genres[0] // console.log(trackData)\n\n            };\n            return trackData;\n          }); // console.log(tracks)\n          // console.log(tracks)\n\n          var playlist = {\n            imageUrl: playlistResponse.images[0].url,\n            name: playlistResponse.name,\n            songs: tracks,\n            uri: playlistResponse.uri\n          };\n\n          var playlistsToRender = _toConsumableArray(_this2.state.playlistsToRender).concat([playlist]);\n\n          _this2.setState({\n            playlistsToRender: playlistsToRender\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"playlist-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"playlistGrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.playlistsToRender.map(function (playlist, key) {\n        return React.createElement(PlaylistPickerCards, {\n          playlist: playlist,\n          key: key,\n          index: key,\n          history: _this3.props.history,\n          selectPlaylist: _this3.selectPlaylist,\n          selectedPlaylist: _this3.state.selectedPlaylist,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return PlaylistPicker;\n}(Component);\n\nexport default PlaylistPicker;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/PlaylistPicker.js"],"names":["React","Component","SpotifyWebApi","PlaylistPickerCards","spotifyPlaylists","spotifyApi","PlaylistPicker","props","selectPlaylist","selectedPlaylist","setState","state","playlistsToRender","setAccessToken","access_token","map","playlist","id","uri","match","getPlaylist","then","playlistResponse","console","log","tracks","items","track","artistId","artists","genres","getArtist","artistResponse","trackData","name","imageUrl","images","url","songs","key","history"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\n\n// my components \n// import PlaylistCard from '../PlaylistCard';\nimport PlaylistPickerCards from './PlaylistPickerCards'\n\n// content\nimport spotifyPlaylists from './SpotifyPlaylists'\n\nconst spotifyApi = new SpotifyWebApi();\n\nclass PlaylistPicker extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            spotifyPlaylists,\n            playlistsToRender: []\n        }\n    }\n\n    selectPlaylist = (selectedPlaylist) => {\n        this.setState({ selectedPlaylist })\n        this.props.selectPlaylist(selectedPlaylist)\n    }\n\n    componentDidMount() {\n        spotifyApi.setAccessToken(this.props.access_token)\n        spotifyPlaylists.map(playlist => {\n            let id = playlist.uri.match(/[^:]*$/)\n            return spotifyApi.getPlaylist(id)\n                .then(playlistResponse => {\n                    console.log(playlistResponse)\n                    let tracks = playlistResponse.tracks.items.map(track => {\n                        let artistId = track.track.artists[0].id\n                        let genres = spotifyApi.getArtist(artistId)\n                            .then(artistResponse => {\n                                console.log(artistResponse.genres)\n                                return artistResponse.genres\n                            })\n                        // console.log(genres)\n                        let trackData = {\n                            name: track.track.name,\n                            genres: genres[0]\n                        }\n                        // console.log(trackData)\n                        return trackData\n                    })\n                    // console.log(tracks)\n\n                    // console.log(tracks)\n\n                    let playlist = {\n                        imageUrl: playlistResponse.images[0].url,\n                        name: playlistResponse.name,\n                        songs: tracks,\n                        uri: playlistResponse.uri\n                    }\n                    let playlistsToRender = [...this.state.playlistsToRender, playlist]\n                    this.setState({ playlistsToRender })\n                })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"playlist-picker\">\n                <div className=\"playlistGrid\">\n                    {this.state.playlistsToRender.map((playlist, key) =>\n                        <PlaylistPickerCards\n                            playlist={playlist}\n                            key={key}\n                            index={key}\n                            history={this.props.history}\n                            selectPlaylist={this.selectPlaylist}\n                            selectedPlaylist={this.state.selectedPlaylist}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PlaylistPicker;"]},"metadata":{},"sourceType":"module"}