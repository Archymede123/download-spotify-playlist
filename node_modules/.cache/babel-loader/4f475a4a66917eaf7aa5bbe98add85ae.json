{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/PlaylistCard.js\";\nimport React, { Component } from 'react'; //components\n// import TagManager from './TagManager';\n\nimport Rating from 'react-rating';\nimport Button from './UI-components/Button';\nimport PlaylistCardTop from './PlaylistCardTop'; //fontawsome\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar as faStarSolid } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as faStarRegular } from '@fortawesome/free-regular-svg-icons'; //css \n\nimport '../css/PlaylistCards.css'; // add icon to the library\n\nlibrary.add(faStarSolid, faStarRegular);\n\nvar PlaylistCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistCard, _Component);\n\n  function PlaylistCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaylistCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaylistCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleButtonClick = function () {\n      var playlist = _this.props.playlist;\n      var playlistNameConcatenated = playlist.name.replace(/\\//g, \" \").split(\" \").join('').toLowerCase();\n\n      _this.props.history.push(\"/playlist/playlist=\".concat(playlist.index, \"-\").concat(playlistNameConcatenated));\n    };\n\n    _this.handleRatingClick = function (rating) {\n      _this.props.addPlaylistRating(_this.props.playlist.index, rating);\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistCard, [{\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlist; // let hasTags = playlist.tags === undefined ? false : true\n      // let tagList;\n      // if (hasTags) {\n      //   tagList =\n      //     <div className='tagList'> Tags:\n      //         {playlist.tags.map(tag =>\n      //         <span>{`${tag} `}</span>\n      //       )}\n      //     </div>\n      // }\n\n      return React.createElement(PlaylistCardTop, {\n        playlist: playlist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleButtonClick,\n        content: \"voir la playlist\",\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"search-indication\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"add a rating\"), React.createElement(Rating, {\n        className: \"playlist-rating\",\n        emptySymbol: React.createElement(FontAwesomeIcon, {\n          icon: ['far', 'star'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }),\n        fullSymbol: React.createElement(FontAwesomeIcon, {\n          icon: ['fas', 'star'],\n          style: {\n            color: '#1DB954'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        initialRating: playlist.rating,\n        onClick: this.handleRatingClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })) // <div className=\"playlist\">\n      //   <img src={playlist.imageUrl} alt=\"playlist\" />\n      //   <h3>{playlist.name}</h3>\n      //   <ul>\n      //     {playlist.songs.slice(0, 3).map((song, key) =>\n      //       <li key={key}>{song.name}</li>\n      //     )}\n      //   </ul>\n      //   {tagList}\n      //   <Button\n      //     onClick={this.handleButtonClick}\n      //     content=\"voir la playlist\"\n      //     className=\"center\"\n      //   />\n      //   {/* <TagManager addTag={this.props.addTag} index={this.props.index} /> */}\n      //   <p className=\"search-indication\">add a rating</p>\n      //   <Rating\n      //     className=\"playlist-rating\"\n      //     emptySymbol={<FontAwesomeIcon icon={['far', 'star']} />}\n      //     fullSymbol={<FontAwesomeIcon icon={['fas', 'star']} style={{ color: '#1DB954' }} />}\n      //     initialRating={playlist.rating}\n      //     onClick={this.handleRatingClick}\n      //   />\n      // </div>\n      ;\n    }\n  }]);\n\n  return PlaylistCard;\n}(Component);\n\nexport default PlaylistCard;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/PlaylistCard.js"],"names":["React","Component","Rating","Button","PlaylistCardTop","library","FontAwesomeIcon","faStar","faStarSolid","faStarRegular","add","PlaylistCard","handleButtonClick","playlist","props","playlistNameConcatenated","name","replace","split","join","toLowerCase","history","push","index","handleRatingClick","rating","addPlaylistRating","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,mCAAtC;AACA,SAASD,MAAM,IAAIE,aAAnB,QAAwC,qCAAxC,C,CAEA;;AACA,OAAO,0BAAP,C,CAEA;;AACAJ,OAAO,CAACK,GAAR,CAAYF,WAAZ,EAAyBC,aAAzB;;IAGME,Y;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAoB,YAAM;AACxB,UAAIC,QAAQ,GAAG,MAAKC,KAAL,CAAWD,QAA1B;AACA,UAAIE,wBAAwB,GAAGF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,KAAtB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,GAAxC,EAA6CC,IAA7C,CAAkD,EAAlD,EAAsDC,WAAtD,EAA/B;;AACA,YAAKN,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,8BAA8CT,QAAQ,CAACU,KAAvD,cAAgER,wBAAhE;AACD,K;;UAEDS,iB,GAAoB,UAACC,MAAD,EAAY;AAC9B,YAAKX,KAAL,CAAWY,iBAAX,CAA6B,MAAKZ,KAAL,CAAWD,QAAX,CAAoBU,KAAjD,EAAwDE,MAAxD;AACD,K;;;;;;;6BAEQ;AACP,UAAIZ,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B,CADO,CAEP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aACE,oBAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEA,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKD,iBADhB;AAEE,QAAA,OAAO,EAAC,kBAFV;AAGE,QAAA,SAAS,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,EAQE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,WAAW,EAAE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFf;AAGE,QAAA,UAAU,EAAE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,CAAvB;AAAwC,UAAA,KAAK,EAAE;AAAEe,YAAAA,KAAK,EAAE;AAAT,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHd;AAIE,QAAA,aAAa,EAAEd,QAAQ,CAACY,MAJ1B;AAKE,QAAA,OAAO,EAAE,KAAKD,iBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CAkBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCF;AA4CD;;;;EAtEwBvB,S;;AAyE3B,eAAeU,YAAf","sourcesContent":["import React, { Component } from 'react';\n\n//components\n// import TagManager from './TagManager';\nimport Rating from 'react-rating';\nimport Button from './UI-components/Button'\nimport PlaylistCardTop from './PlaylistCardTop'\n\n//fontawsome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar as faStarSolid } from '@fortawesome/free-solid-svg-icons'\nimport { faStar as faStarRegular } from '@fortawesome/free-regular-svg-icons'\n\n//css \nimport '../css/PlaylistCards.css';\n\n// add icon to the library\nlibrary.add(faStarSolid, faStarRegular)\n\n\nclass PlaylistCard extends Component {\n\n  handleButtonClick = () => {\n    let playlist = this.props.playlist\n    let playlistNameConcatenated = playlist.name.replace(/\\//g, \" \").split(\" \").join('').toLowerCase()\n    this.props.history.push(`/playlist/playlist=${playlist.index}-${playlistNameConcatenated}`)\n  }\n\n  handleRatingClick = (rating) => {\n    this.props.addPlaylistRating(this.props.playlist.index, rating)\n  }\n\n  render() {\n    let playlist = this.props.playlist;\n    // let hasTags = playlist.tags === undefined ? false : true\n    // let tagList;\n\n    // if (hasTags) {\n    //   tagList =\n    //     <div className='tagList'> Tags:\n    //         {playlist.tags.map(tag =>\n    //         <span>{`${tag} `}</span>\n    //       )}\n    //     </div>\n    // }\n\n    return (\n      <PlaylistCardTop playlist={playlist}>\n        <Button\n          onClick={this.handleButtonClick}\n          content=\"voir la playlist\"\n          className=\"center\"\n        />\n        {/* <TagManager addTag={this.props.addTag} index={this.props.index} /> */}\n        <p className=\"search-indication\">add a rating</p>\n        <Rating\n          className=\"playlist-rating\"\n          emptySymbol={<FontAwesomeIcon icon={['far', 'star']} />}\n          fullSymbol={<FontAwesomeIcon icon={['fas', 'star']} style={{ color: '#1DB954' }} />}\n          initialRating={playlist.rating}\n          onClick={this.handleRatingClick}\n        />\n      </PlaylistCardTop>\n\n      // <div className=\"playlist\">\n      //   <img src={playlist.imageUrl} alt=\"playlist\" />\n      //   <h3>{playlist.name}</h3>\n      //   <ul>\n      //     {playlist.songs.slice(0, 3).map((song, key) =>\n      //       <li key={key}>{song.name}</li>\n      //     )}\n      //   </ul>\n      //   {tagList}\n      //   <Button\n      //     onClick={this.handleButtonClick}\n      //     content=\"voir la playlist\"\n      //     className=\"center\"\n      //   />\n      //   {/* <TagManager addTag={this.props.addTag} index={this.props.index} /> */}\n      //   <p className=\"search-indication\">add a rating</p>\n      //   <Rating\n      //     className=\"playlist-rating\"\n      //     emptySymbol={<FontAwesomeIcon icon={['far', 'star']} />}\n      //     fullSymbol={<FontAwesomeIcon icon={['fas', 'star']} style={{ color: '#1DB954' }} />}\n      //     initialRating={playlist.rating}\n      //     onClick={this.handleRatingClick}\n      //   />\n      // </div>\n\n    );\n  }\n}\n\nexport default PlaylistCard;"]},"metadata":{},"sourceType":"module"}