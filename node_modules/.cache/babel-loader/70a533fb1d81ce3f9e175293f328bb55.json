{"ast":null,"code":"export function score(answers, remainingTime, timeToGuess, currentSong) {\n  var comboCoef = answers.reverse().map(function (answer, index) {\n    if (answer.correct === answers[index + 1].correct === true) {\n      comboCoef += 1;\n      console.log(comboCoef);\n    }\n  });\n  var score = answers.slice(-1)[0].correct === true ? \"1.\".concat(comboCoef) * (2 - (timeToGuess - remainingTime) / timeToGuess) * 100 : 0;\n  answers.slice(-1)[0].score = score;\n  return answers;\n} // var remainingTime = 25\n// var timeToGuess = 30\n// var currentSong = \"yo\"\n// var answers = [\n//     { answer: \"yo\", correct: true },\n//     { answer: \"hahah\", correct: false },\n//     { answer: \"lol\", correct: true },\n//     { answer: \"yallah\", correct: false }\n// ]\n// score(answers, remainingTime, timeToGuess, currentSong)","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/api/score.js"],"names":["score","answers","remainingTime","timeToGuess","currentSong","comboCoef","reverse","map","answer","index","correct","console","log","slice"],"mappings":"AAAA,OAAO,SAASA,KAAT,CAAeC,OAAf,EAAwBC,aAAxB,EAAuCC,WAAvC,EAAoDC,WAApD,EAAiE;AACpE,MAAIC,SAAS,GAAGJ,OAAO,CAACK,OAAR,GAAkBC,GAAlB,CAAsB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACrD,QAAID,MAAM,CAACE,OAAP,KAAmBT,OAAO,CAACQ,KAAK,GAAG,CAAT,CAAP,CAAmBC,OAAtC,KAAkD,IAAtD,EAA4D;AACxDL,MAAAA,SAAS,IAAI,CAAb;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACH;AACJ,GALe,CAAhB;AAMA,MAAIL,KAAK,GAAGC,OAAO,CAACY,KAAR,CAAc,CAAC,CAAf,EAAkB,CAAlB,EAAqBH,OAArB,KAAiC,IAAjC,GAAwC,YAAKL,SAAL,KAAoB,IAAK,CAACF,WAAW,GAAGD,aAAf,IAAgCC,WAAzD,IAAyE,GAAjH,GAAuH,CAAnI;AACAF,EAAAA,OAAO,CAACY,KAAR,CAAc,CAAC,CAAf,EAAkB,CAAlB,EAAqBb,KAArB,GAA6BA,KAA7B;AACA,SAAOC,OAAP;AACH,C,CAGD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["export function score(answers, remainingTime, timeToGuess, currentSong) {\n    let comboCoef = answers.reverse().map((answer, index) => {\n        if (answer.correct === answers[index + 1].correct === true) {\n            comboCoef += 1\n            console.log(comboCoef)\n        }\n    })\n    let score = answers.slice(-1)[0].correct === true ? `1.${comboCoef}` * (2 - ((timeToGuess - remainingTime) / timeToGuess)) * 100 : 0\n    answers.slice(-1)[0].score = score\n    return answers\n}\n\n\n// var remainingTime = 25\n// var timeToGuess = 30\n// var currentSong = \"yo\"\n\n// var answers = [\n//     { answer: \"yo\", correct: true },\n//     { answer: \"hahah\", correct: false },\n//     { answer: \"lol\", correct: true },\n//     { answer: \"yallah\", correct: false }\n// ]\n\n// score(answers, remainingTime, timeToGuess, currentSong)"]},"metadata":{},"sourceType":"module"}