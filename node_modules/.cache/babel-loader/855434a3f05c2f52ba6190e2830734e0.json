{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/LoginPage.js\";\nimport React, { Component } from 'react';\nimport Button from './UI-components/Button';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport '../css/App.css';\nimport { fetchPlaylistInfos, fetchPlaylistData } from '../api/fetchData';\nvar spotifyApi = new SpotifyWebApi();\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this));\n    _this._isMounted = true;\n\n    _this.goToPlaylists = function (event) {\n      event.preventDefault();\n      window.location = 'http://localhost:8888/login';\n    };\n\n    var params = _this.getHashParams();\n\n    var access_token = params.access_token;\n    _this.state = {\n      user: {},\n      playlists: {},\n      access_token: access_token\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      return hashParams;\n    }\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      spotifyApi.getUserPlaylists().then(function (response) {\n        console.log(response);\n      });\n    }\n  }, {\n    key: \"render\",\n    // componentDidMount() {\n    //     let accessToken = this.state.access_token\n    //     // console.log(accessToken)\n    //     // this.setState({ access_token: accessToken })\n    //     if (!accessToken) return;\n    //     if (this._isMounted) {\n    //         fetchPlaylistInfos(accessToken).then(data => {\n    //             this.setState({\n    //                 user: [data.display_name, data.followers.total, data.images[0].url]\n    //             })\n    //         })\n    //         fetchPlaylistData(accessToken).then(playlists => {\n    //             this.setState({\n    //                 playlists: playlists.map((item, index) => {\n    //                     return {\n    //                         name: item.name,\n    //                         songs: item.trackDatas,\n    //                         imageUrl: item.images[0].url,\n    //                         rating: 0,\n    //                         index: index\n    //                     }\n    //                 }\n    //                 )\n    //             })\n    //         })\n    //     }\n    // }\n    // componentDidUpdate() {\n    //     let statePlaylist = this.state.playlists\n    //     if (Object.keys(statePlaylist).length !== 0) {\n    //         this.props.loadSpotifyData(this.state)\n    //     }\n    // }\n    // componentWillUnmount() {\n    //     this._isMounted = false\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"You currently have no playlist loaded. Click the button below to login to your spotify account\"), React.createElement(Button, {\n        content: \"Sign In with Spotify\",\n        onClick: this.goToPlaylists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Button, {\n        content: \"Sign In with Spotify\",\n        onClick: this.getUserInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/LoginPage.js"],"names":["React","Component","Button","SpotifyWebApi","fetchPlaylistInfos","fetchPlaylistData","spotifyApi","LoginPage","_isMounted","goToPlaylists","event","preventDefault","window","location","params","getHashParams","access_token","state","user","playlists","hashParams","e","r","q","hash","substring","exec","decodeURIComponent","getUserPlaylists","then","response","console","log","margin","getUserInfo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,gBAAP;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,kBAAtD;AAEA,IAAMC,UAAU,GAAG,IAAIH,aAAJ,EAAnB;;IAEMI,S;;;;;AACF,uBAAc;AAAA;;AAAA;;AACV;AADU,UAWdC,UAXc,GAWD,IAXC;;AAAA,UAgCdC,aAhCc,GAgCE,UAACC,KAAD,EAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,6BAAlB;AACH,KAnCa;;AAEV,QAAMC,MAAM,GAAG,MAAKC,aAAL,EAAf;;AACA,QAAMC,YAAY,GAAGF,MAAM,CAACE,YAA5B;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTH,MAAAA,YAAY,EAAEA;AAHL,KAAb;AAJU;AASb;;;;oCAIe;AACZ,UAAII,UAAU,GAAG,EAAjB;AACA,UAAIC,CAAJ;AAAA,UAAOC,CAAC,GAAG,sBAAX;AAAA,UACIC,CAAC,GAAGX,MAAM,CAACC,QAAP,CAAgBW,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;AAEAJ,MAAAA,CAAC,GAAGC,CAAC,CAACI,IAAF,CAAOH,CAAP,CAAJ;;AACA,aAAOF,CAAP,EAAU;AACND,QAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBM,kBAAkB,CAACN,CAAC,CAAC,CAAD,CAAF,CAArC;AACAA,QAAAA,CAAC,GAAGC,CAAC,CAACI,IAAF,CAAOH,CAAP,CAAJ;AACH;;AACD,aAAOH,UAAP;AACH;;;kCAEa;AACVd,MAAAA,UAAU,CAACsB,gBAAX,GACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,OAHL;AAIH;;;AAOD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;6BAES;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE;AAAV,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAE,KAAKxB,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAE,KAAKyB,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AAWH;;;;EA3FmBjC,S;;AA8FxB,eAAeM,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from './UI-components/Button';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport '../css/App.css';\nimport { fetchPlaylistInfos, fetchPlaylistData } from '../api/fetchData'\n\nconst spotifyApi = new SpotifyWebApi();\n\nclass LoginPage extends Component {\n    constructor() {\n        super();\n        const params = this.getHashParams();\n        const access_token = params.access_token;\n        this.state = {\n            user: {},\n            playlists: {},\n            access_token: access_token\n        }\n    }\n\n    _isMounted = true;\n\n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        e = r.exec(q)\n        while (e) {\n            hashParams[e[1]] = decodeURIComponent(e[2]);\n            e = r.exec(q);\n        }\n        return hashParams;\n    }\n\n    getUserInfo() {\n        spotifyApi.getUserPlaylists()\n            .then(response => {\n                console.log(response)\n            })\n    }\n\n    goToPlaylists = (event) => {\n        event.preventDefault()\n        window.location = 'http://localhost:8888/login'\n    }\n\n    // componentDidMount() {\n    //     let accessToken = this.state.access_token\n    //     // console.log(accessToken)\n    //     // this.setState({ access_token: accessToken })\n    //     if (!accessToken) return;\n\n    //     if (this._isMounted) {\n    //         fetchPlaylistInfos(accessToken).then(data => {\n    //             this.setState({\n    //                 user: [data.display_name, data.followers.total, data.images[0].url]\n    //             })\n    //         })\n\n    //         fetchPlaylistData(accessToken).then(playlists => {\n    //             this.setState({\n    //                 playlists: playlists.map((item, index) => {\n    //                     return {\n    //                         name: item.name,\n    //                         songs: item.trackDatas,\n    //                         imageUrl: item.images[0].url,\n    //                         rating: 0,\n    //                         index: index\n    //                     }\n    //                 }\n    //                 )\n    //             })\n    //         })\n    //     }\n    // }\n\n    // componentDidUpdate() {\n    //     let statePlaylist = this.state.playlists\n    //     if (Object.keys(statePlaylist).length !== 0) {\n    //         this.props.loadSpotifyData(this.state)\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     this._isMounted = false\n    // }\n\n    render() {\n        return (\n            <div>\n                <p style={{ margin: 0 }}>You currently have no playlist loaded. Click the button\n                    below to login to your spotify account\n                </p>\n                <Button content=\"Sign In with Spotify\" onClick={this.goToPlaylists} />\n                <Button content=\"Sign In with Spotify\" onClick={this.getUserInfo} />\n\n            </div>\n\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}