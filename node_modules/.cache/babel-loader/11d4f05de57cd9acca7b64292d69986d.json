{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/Blindtest.js\";\nimport React, { Component } from 'react'; // import Button from './UI-components/Button';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nvar spotifyApi = new SpotifyWebApi();\n\nvar Blindtest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Blindtest, _Component);\n\n  function Blindtest() {\n    var _this;\n\n    _classCallCheck(this, Blindtest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Blindtest).call(this));\n\n    _this.playBlindtest = function (event) {\n      _this.setState({\n        blindtestGuess: event.currentTarget.value\n      });\n\n      spotifyApi.getMyCurrentPlaybackState().then(function (response) {\n        _this.setState({\n          currentSong: response.item.name\n        });\n      });\n\n      if (_this.state.currentSong === _this.state.blindtestGuess) {\n        console.log(\"yeahhhhh\");\n      }\n    };\n\n    _this.state = {\n      currentSong: \"\",\n      blindtestGuess: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Blindtest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      spotifyApi.setAccessToken(this.props.access_token);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"blindest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Try to guess the song now playing\"), React.createElement(\"input\", {\n        className: \"answer-input\",\n        type: \"text\",\n        onChange: this.playBlindtest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Blindtest;\n}(Component);\n\nexport default Blindtest;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/Blindtest.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","Blindtest","playBlindtest","event","setState","blindtestGuess","currentTarget","value","getMyCurrentPlaybackState","then","response","currentSong","item","name","state","console","log","setAccessToken","props","access_token"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,IAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;;IAIME,S;;;;;AACF,uBAAc;AAAA;;AAAA;;AACV;;AADU,UAQdC,aARc,GAQE,UAACC,KAAD,EAAW;AACvB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEF,KAAK,CAACG,aAAN,CAAoBC;AAAtC,OAAd;;AACAP,MAAAA,UAAU,CAACQ,yBAAX,GACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,cAAKN,QAAL,CAAc;AAAEO,UAAAA,WAAW,EAAED,QAAQ,CAACE,IAAT,CAAcC;AAA7B,SAAd;AACH,OAHL;;AAIA,UAAI,MAAKC,KAAL,CAAWH,WAAX,KAA2B,MAAKG,KAAL,CAAWT,cAA1C,EAA0D;AACtDU,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACJ,KAjBa;;AAEV,UAAKF,KAAL,GAAa;AACTH,MAAAA,WAAW,EAAE,EADJ;AAETN,MAAAA,cAAc,EAAE;AAFP,KAAb;AAFU;AAMb;;;;wCAamB;AAChBL,MAAAA,UAAU,CAACiB,cAAX,CAA0B,KAAKC,KAAL,CAAWC,YAArC;AACH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEI;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,QAAQ,EAC/C,KAAKjB,aADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAOH;;;;EAhCmBJ,S;;AAmCxB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\n// import Button from './UI-components/Button';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\n\n\nclass Blindtest extends Component {\n    constructor() {\n        super();\n        this.state = {\n            currentSong: \"\",\n            blindtestGuess: \"\"\n        }\n    }\n\n    playBlindtest = (event) => {\n        this.setState({ blindtestGuess: event.currentTarget.value })\n        spotifyApi.getMyCurrentPlaybackState()\n            .then(response => {\n                this.setState({ currentSong: response.item.name })\n            })\n        if (this.state.currentSong === this.state.blindtestGuess) {\n            console.log(\"yeahhhhh\")\n        }\n    }\n\n    componentDidMount() {\n        spotifyApi.setAccessToken(this.props.access_token)\n    }\n\n    render() {\n        return (\n            <div className=\"blindest\">\n                <p>Try to guess the song now playing</p>\n                <input className=\"answer-input\" type=\"text\" onChange=\n                    {this.playBlindtest} />\n            </div>\n        );\n    }\n}\n\nexport default Blindtest;"]},"metadata":{},"sourceType":"module"}