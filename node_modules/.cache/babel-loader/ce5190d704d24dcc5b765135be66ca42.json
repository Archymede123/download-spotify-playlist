{"ast":null,"code":"import _toConsumableArray from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/PlaylistPickerCards.js\";\nimport React, { Component } from 'react';\nimport PlaylistCardTop from '../PlaylistCardTop';\nimport SpotifyWebApi from 'spotify-web-api-js';\nvar spotifyApi = new SpotifyWebApi();\n\nvar PlaylistPickerCards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistPickerCards, _Component);\n\n  function PlaylistPickerCards(props) {\n    var _this;\n\n    _classCallCheck(this, PlaylistPickerCards);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaylistPickerCards).call(this, props));\n\n    _this.handleClick = function () {\n      _this.setState({\n        isSelected: !_this.state.isSelected\n      });\n\n      _this.props.selectPlaylist(_this.props.playlist);\n    };\n\n    _this.state = {\n      playlistGenres: []\n    };\n    return _this;\n  }\n\n  _createClass(PlaylistPickerCards, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      spotifyApi.setAccessToken(this.props.access_token);\n      this.props.playlist.songs.map(function (song) {\n        var artistId = song.artistUri.match(/[^:]*$/);\n        return spotifyApi.getArtist(artistId).then(function (response) {\n          var playlistGenres = _toConsumableArray(_this2.state.playlistGenres).concat([response.genres]);\n\n          _this2.setState({\n            playlistGenres: playlistGenres\n          });\n        }).catch(function (err) {\n          if (err.status === 429) {\n            err.response.get('retry-after');\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlist;\n      var isSelected = this.props.selectedPlaylist === playlist ? true : false;\n      return React.createElement(\"div\", {\n        onClick: this.handleClick,\n        className: isSelected ? \"playlist selected\" : \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(PlaylistCardTop, {\n        playlist: playlist,\n        access_token: this.props.access_token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PlaylistPickerCards;\n}(Component);\n\nexport default PlaylistPickerCards;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/PlaylistPickerCards.js"],"names":["React","Component","PlaylistCardTop","SpotifyWebApi","spotifyApi","PlaylistPickerCards","props","handleClick","setState","isSelected","state","selectPlaylist","playlist","playlistGenres","setAccessToken","access_token","songs","map","song","artistId","artistUri","match","getArtist","then","response","genres","catch","err","status","get","selectedPlaylist"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,IAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;;IAMME,mB;;;;;AACF,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;;AADe,UAOnBC,WAPmB,GAOL,YAAM;AAChB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAA1B,OAAd;;AACA,YAAKH,KAAL,CAAWK,cAAX,CAA0B,MAAKL,KAAL,CAAWM,QAArC;AACH,KAVkB;;AAEf,UAAKF,KAAL,GAAa;AACTG,MAAAA,cAAc,EAAE;AADP,KAAb;AAFe;AAKlB;;;;wCAOmB;AAAA;;AAEhBT,MAAAA,UAAU,CAACU,cAAX,CAA0B,KAAKR,KAAL,CAAWS,YAArC;AAGA,WAAKT,KAAL,CAAWM,QAAX,CAAoBI,KAApB,CAA0BC,GAA1B,CAA8B,UAAAC,IAAI,EAAI;AAClC,YAAIC,QAAQ,GAAGD,IAAI,CAACE,SAAL,CAAeC,KAAf,CAAqB,QAArB,CAAf;AACA,eAAOjB,UAAU,CAACkB,SAAX,CAAqBH,QAArB,EACFI,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,cAAIX,cAAc,sBAAO,MAAI,CAACH,KAAL,CAAWG,cAAlB,UAAkCW,QAAQ,CAACC,MAA3C,EAAlB;;AACA,UAAA,MAAI,CAACjB,QAAL,CAAc;AAAEK,YAAAA,cAAc,EAAdA;AAAF,WAAd;AACH,SAJE,EAKFa,KALE,CAKI,UAAAC,GAAG,EAAI;AACV,cAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBD,YAAAA,GAAG,CAACH,QAAJ,CAAaK,GAAb,CAAiB,aAAjB;AACH;AACJ,SATE,CAAP;AAWH,OAbD;AAcH;;;6BAEQ;AACL,UAAIjB,QAAQ,GAAG,KAAKN,KAAL,CAAWM,QAA1B;AACA,UAAIH,UAAU,GAAG,KAAKH,KAAL,CAAWwB,gBAAX,KAAgClB,QAAhC,GAA2C,IAA3C,GAAkD,KAAnE;AACA,aACI;AACI,QAAA,OAAO,EAAE,KAAKL,WADlB;AAEI,QAAA,SAAS,EAAEE,UAAU,GAAG,mBAAH,GAAyB,UAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,eAAD;AACI,QAAA,QAAQ,EAAEG,QADd;AAEI,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWS,YAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAYH;;;;EAjD6Bd,S;;AAqDlC,eAAeI,mBAAf","sourcesContent":["import React, { Component } from 'react';\nimport PlaylistCardTop from '../PlaylistCardTop';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\n\n\n\n\nclass PlaylistPickerCards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playlistGenres: []\n        }\n    }\n\n    handleClick = () => {\n        this.setState({ isSelected: !this.state.isSelected })\n        this.props.selectPlaylist(this.props.playlist)\n    }\n\n    componentDidMount() {\n\n        spotifyApi.setAccessToken(this.props.access_token)\n\n\n        this.props.playlist.songs.map(song => {\n            let artistId = song.artistUri.match(/[^:]*$/)\n            return spotifyApi.getArtist(artistId)\n                .then(response => {\n                    let playlistGenres = [...this.state.playlistGenres, response.genres]\n                    this.setState({ playlistGenres })\n                })\n                .catch(err => {\n                    if (err.status === 429) {\n                        err.response.get('retry-after')\n                    }\n                })\n\n        })\n    }\n\n    render() {\n        let playlist = this.props.playlist;\n        let isSelected = this.props.selectedPlaylist === playlist ? true : false\n        return (\n            <div\n                onClick={this.handleClick}\n                className={isSelected ? \"playlist selected\" : \"playlist\"}\n            >\n                <PlaylistCardTop\n                    playlist={playlist}\n                    access_token={this.props.access_token}\n                />\n            </div>\n\n        )\n    }\n\n}\n\nexport default PlaylistPickerCards"]},"metadata":{},"sourceType":"module"}