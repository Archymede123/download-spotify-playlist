{"ast":null,"code":"import _toConsumableArray from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js\";\nimport React, { Component } from 'react';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport Playlist from './Playlist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport '../css/App.css'; // import querystring from 'query-string';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      serverData: {},\n      filterString: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accessToken = new URLSearchParams(window.location.search).get('access_token');\n      if (!accessToken) return;\n      fetch('https://api.spotify.com/v1/me', {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          user: {\n            name: data.display_name\n          }\n        });\n      });\n      fetch(\"https://api.spotify.com/v1/me/playlists?limit=49\", {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (playlistData) {\n        var playlists = playlistData.items;\n        var trackDataPromises = playlists.map(function (playlist) {\n          // let responsePromise = fetch(`${playlist.tracks.href}?offset=100`, {\n          //   headers: { 'Authorization': 'Bearer ' + accessToken }\n          // })\n          var responsePromise = []; // function fetchData(page) {\n          //   let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n          //     headers: { 'Authorization': 'Bearer ' + accessToken }\n          //   }).then(response => response.json())\n          //   responsePromise.push(responsePromiseDetails)\n          // }\n          // for (let i = 1; i < 6; i++) {\n          //   setTimeout(fetchData(i), 50000)\n          // }\n          // function fetchData(page) {\n          //   console.log(`hello ${page}`)\n          // }\n          // for (let i = 1; i < 6; i++) {\n          //   setTimeout(fetchData(i), i * 1000)\n          // }\n\n          var i = 1; //  set your counter to 1\n\n          function myLoop() {\n            //  create a loop function\n            setTimeout(function () {\n              //  call a 3s setTimeout when the loop is called\n              var responsePromiseDetails = fetch(\"\".concat(playlist.tracks.href, \"?offset=\").concat(i, \"00\"), {\n                headers: {\n                  'Authorization': 'Bearer ' + accessToken\n                }\n              }).then(function (response) {\n                return response.json();\n              });\n              responsePromise.push(responsePromiseDetails);\n              i++; //  increment the counter\n\n              if (i < 5) {\n                //  if the counter < 10, call the loop function\n                myLoop(); //  ..  again which will trigger another \n              } //  ..  setTimeout()\n\n            }, 6000);\n          }\n\n          myLoop(); // for (let i = 1; i < 10; i++) {\n          //   setTimeout(function timer() {\n          //     alert(\"hello world\");\n          //   }, i * 3000);\n          // }\n\n          [0, 1, 2].forEach(function (page) {\n            var responsePromiseDetails = fetch(\"\".concat(playlist.tracks.href, \"?offset=\").concat(page, \"00\"), {\n              headers: {\n                'Authorization': 'Bearer ' + accessToken\n              }\n            }).then(function (response) {\n              return response.json();\n            });\n            responsePromise.push(responsePromiseDetails);\n          });\n          var trackDataPromise = Promise.all(responsePromise);\n          return trackDataPromise;\n        });\n        var allTracksDataPromises = Promise.all(trackDataPromises);\n        var playlistsPromise = allTracksDataPromises.then(function (trackDatasArrays) {\n          trackDatasArrays.map(function (trackDatas, index) {\n            var trackDatasPushed = [];\n            trackDatas.map(function (track) {\n              return trackDatasPushed.push(track.items);\n            });\n\n            var flatten = function flatten(array) {\n              var _ref;\n\n              return Array.isArray(array) ? (_ref = []).concat.apply(_ref, _toConsumableArray(array.map(flatten))) : array;\n            };\n\n            var trackDatasFlatten = flatten(trackDatasPushed);\n            var playlistTrackData = [];\n            trackDatasFlatten.forEach(function (trackData, i) {\n              var playlistSong = {\n                name: trackData.track.name,\n                duration: trackData.track.duration_ms / 1000\n              };\n              playlistTrackData.push(playlistSong);\n            });\n            return playlists[index].trackDatas = playlistTrackData;\n          });\n          return playlists;\n        });\n        return playlistsPromise;\n      }).then(function (playlists) {\n        console.log(playlists);\n\n        _this2.setState({\n          playlists: playlists.map(function (item) {\n            return {\n              name: item.name,\n              songs: item.trackDatas,\n              imageUrl: item.images[0].url\n            };\n          })\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.playlists);\n      var playlistsToRender = this.state.user && this.state.playlists ? this.state.playlists.filter(function (playlist) {\n        var matchesPlaylist = playlist.name.toLowerCase().includes(_this3.state.filterString.toLowerCase());\n        var matchesSong = playlist.songs.find(function (song) {\n          return song.name.toLowerCase().includes(_this3.state.filterString.toLowerCase());\n        });\n        return matchesPlaylist || matchesSong;\n      }) : [];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.state.user.name, \"'s playlist\"), React.createElement(DownloadPlaylist, {\n        playlists: this.state.playlists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(PlaylistCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(HoursCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        onTextChange: function onTextChange(text) {\n          return _this3.setState({\n            filterString: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), playlistsToRender.map(function (playlist) {\n        return React.createElement(Playlist, {\n          playlist: playlist,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        });\n      })) : React.createElement(\"button\", {\n        onClick: function onClick() {\n          return window.location = 'http://localhost:8888/login';\n        },\n        style: {\n          'fontSize': '16px',\n          'padding': '16px 32px',\n          'backgroundColor': '#1CD156',\n          'marginTop': '64px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Sign In with Spotify\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js"],"names":["React","Component","DownloadPlaylist","Playlist","HoursCounter","Filter","PlaylistCounter","App","state","serverData","filterString","accessToken","URLSearchParams","window","location","search","get","fetch","headers","then","response","json","data","setState","user","name","display_name","playlistData","playlists","items","trackDataPromises","map","playlist","responsePromise","i","myLoop","setTimeout","responsePromiseDetails","tracks","href","push","forEach","page","trackDataPromise","Promise","all","allTracksDataPromises","playlistsPromise","trackDatasArrays","trackDatas","index","trackDatasPushed","track","flatten","array","Array","isArray","concat","trackDatasFlatten","playlistTrackData","trackData","playlistSong","duration","duration_ms","console","log","item","songs","imageUrl","images","url","playlistsToRender","filter","matchesPlaylist","toLowerCase","includes","matchesSong","find","song","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport Playlist from './Playlist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport '../css/App.css';\n\n// import querystring from 'query-string';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      filterString: ''\n    }\n  }\n\n  componentDidMount() {\n\n    let accessToken = new URLSearchParams(window.location.search).get('access_token');\n    if (!accessToken) return;\n\n    fetch('https://api.spotify.com/v1/me', {\n      headers: { 'Authorization': 'Bearer ' + accessToken }\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          user: {\n            name: data.display_name\n          }\n        })\n      })\n\n    fetch(`https://api.spotify.com/v1/me/playlists?limit=49`, {\n      headers: { 'Authorization': 'Bearer ' + accessToken }\n    }).then(response => response.json())\n      .then(playlistData => {\n        let playlists = playlistData.items\n        let trackDataPromises = playlists.map(playlist => {\n          // let responsePromise = fetch(`${playlist.tracks.href}?offset=100`, {\n          //   headers: { 'Authorization': 'Bearer ' + accessToken }\n          // })\n          let responsePromise = [];\n          // function fetchData(page) {\n          //   let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n          //     headers: { 'Authorization': 'Bearer ' + accessToken }\n          //   }).then(response => response.json())\n          //   responsePromise.push(responsePromiseDetails)\n          // }\n          // for (let i = 1; i < 6; i++) {\n          //   setTimeout(fetchData(i), 50000)\n          // }\n\n          // function fetchData(page) {\n          //   console.log(`hello ${page}`)\n          // }\n          // for (let i = 1; i < 6; i++) {\n          //   setTimeout(fetchData(i), i * 1000)\n          // }\n\n          let i = 1;                     //  set your counter to 1\n\n          function myLoop() {           //  create a loop function\n            setTimeout(function () {    //  call a 3s setTimeout when the loop is called\n              let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${i}00`, {\n                headers: { 'Authorization': 'Bearer ' + accessToken }\n              }).then(response => response.json())\n              responsePromise.push(responsePromiseDetails);\n              i++;                     //  increment the counter\n              if (i < 5) {            //  if the counter < 10, call the loop function\n                myLoop();             //  ..  again which will trigger another \n              }                        //  ..  setTimeout()\n            }, 6000)\n          }\n\n          myLoop();\n\n\n\n          // for (let i = 1; i < 10; i++) {\n          //   setTimeout(function timer() {\n          //     alert(\"hello world\");\n          //   }, i * 3000);\n          // }\n\n          [0, 1, 2].forEach(page => {\n            let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n              headers: { 'Authorization': 'Bearer ' + accessToken }\n            }).then(response => response.json())\n            responsePromise.push(responsePromiseDetails)\n          })\n          let trackDataPromise = Promise.all(responsePromise)\n          return trackDataPromise\n        })\n        let allTracksDataPromises =\n          Promise.all(trackDataPromises)\n        let playlistsPromise = allTracksDataPromises.then(trackDatasArrays => {\n          trackDatasArrays.map((trackDatas, index) => {\n            let trackDatasPushed = [];\n            trackDatas.map(track => {\n              return trackDatasPushed.push(track.items)\n            })\n            let flatten = array => Array.isArray(array)\n              ? [].concat(...array.map(flatten))\n              : array\n            let trackDatasFlatten = flatten(trackDatasPushed)\n            let playlistTrackData = []\n            trackDatasFlatten.forEach((trackData, i) => {\n              let playlistSong = {\n                name: trackData.track.name,\n                duration: trackData.track.duration_ms / 1000\n              }\n              playlistTrackData.push(playlistSong)\n            })\n            return playlists[index].trackDatas = playlistTrackData\n          })\n          return playlists\n        })\n        return playlistsPromise\n      })\n      .then(playlists => {\n        console.log(playlists)\n        this.setState({\n          playlists: playlists.map(item => {\n            return {\n              name: item.name,\n              songs: item.trackDatas,\n              imageUrl: item.images[0].url\n            }\n          }\n          )\n        })\n      })\n  }\n\n  render() {\n    console.log(this.state.playlists)\n    let playlistsToRender =\n      this.state.user &&\n        this.state.playlists\n        ? this.state.playlists.filter(playlist => {\n          let matchesPlaylist = playlist.name.toLowerCase().includes(\n            this.state.filterString.toLowerCase())\n          let matchesSong = playlist.songs.find(song =>\n            song.name.toLowerCase().includes(this.state.filterString.toLowerCase()))\n          return matchesPlaylist || matchesSong\n        }) : []\n    return (\n      <div className=\"App\">\n        {this.state.user ?\n          <div>\n            <h1 >\n              {this.state.user.name}'s playlist\n            </h1>\n            <DownloadPlaylist playlists={this.state.playlists} />\n            <PlaylistCounter playlists={playlistsToRender} />\n            <HoursCounter playlists={playlistsToRender} />\n            <Filter onTextChange={text => this.setState({ filterString: text })} />\n            {playlistsToRender.map(playlist =>\n              <Playlist playlist={playlist} />\n            )}\n\n          </div> : <button onClick={() => window.location = 'http://localhost:8888/login'}\n            style={{ 'fontSize': '16px', 'padding': '16px 32px', 'backgroundColor': '#1CD156', 'marginTop': '64px' }}>Sign In with Spotify</button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}