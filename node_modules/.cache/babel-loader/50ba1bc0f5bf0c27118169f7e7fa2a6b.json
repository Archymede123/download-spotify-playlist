{"ast":null,"code":"import _toConsumableArray from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js\";\nimport React, { Component } from 'react';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport Playlist from './Playlist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport '../css/App.css'; // import querystring from 'query-string';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      serverData: {},\n      filterString: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var that = this;\n      var accessToken = new URLSearchParams(window.location.search).get('access_token');\n      if (!accessToken) return;\n      fetch('https://api.spotify.com/v1/me', {\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          user: {\n            name: data.display_name\n          }\n        });\n      });\n      var i = 0;\n\n      function fetchPlaylistTracks() {\n        setTimeout(function () {\n          fetch(\"https://api.spotify.com/v1/me/playlists?limit=49\", {\n            headers: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (playlistData) {\n            var playlists = playlistData.items;\n            var trackDataPromises = playlists.map(function (playlist) {\n              var responsePromise = [];\n              var responsePromiseDetails = fetch(\"\".concat(playlist.tracks.href, \"?offset=\").concat(i, \"00\"), {\n                headers: {\n                  'Authorization': 'Bearer ' + accessToken\n                }\n              }).then(function (response) {\n                return response.json();\n              });\n              responsePromise.push(responsePromiseDetails); //  set your counter to 1\n              // [0, 1, 2].forEach(page => {\n              //   let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n              //     headers: { 'Authorization': 'Bearer ' + accessToken }\n              //   }).then(response => response.json())\n              //   responsePromise.push(responsePromiseDetails)\n              // })\n\n              var trackDataPromise = Promise.all(responsePromise);\n              return trackDataPromise;\n            });\n            var allTracksDataPromises = Promise.all(trackDataPromises);\n            var playlistsPromise = allTracksDataPromises.then(function (trackDatasArrays) {\n              trackDatasArrays.map(function (trackDatas, index) {\n                var trackDatasPushed = [];\n                trackDatas.map(function (track) {\n                  return trackDatasPushed.push(track.items);\n                });\n\n                var flatten = function flatten(array) {\n                  var _ref;\n\n                  return Array.isArray(array) ? (_ref = []).concat.apply(_ref, _toConsumableArray(array.map(flatten))) : array;\n                };\n\n                var trackDatasFlatten = flatten(trackDatasPushed);\n                var playlistTrackData = [];\n                trackDatasFlatten.forEach(function (trackData, i) {\n                  var playlistSong = {\n                    name: trackData.track.name,\n                    duration: trackData.track.duration_ms / 1000\n                  };\n                  playlistTrackData.push(playlistSong);\n                });\n                return playlists[index].trackDatas = playlistTrackData;\n              });\n              return playlists;\n            });\n            return playlistsPromise;\n          }).then(function (playlists) {\n            console.log(playlists);\n            that.setState({\n              playlists: playlists.map(function (item) {\n                return {\n                  name: item.name,\n                  songs: item.trackDatas,\n                  imageUrl: item.images[0].url\n                };\n              })\n            });\n          });\n          i++;\n\n          if (i < 5) {\n            fetchPlaylistTracks();\n          }\n        }, 6000);\n      }\n\n      fetchPlaylistTracks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.playlists);\n      var playlistsToRender = this.state.user && this.state.playlists ? this.state.playlists.filter(function (playlist) {\n        var matchesPlaylist = playlist.name.toLowerCase().includes(_this3.state.filterString.toLowerCase());\n        var matchesSong = playlist.songs.find(function (song) {\n          return song.name.toLowerCase().includes(_this3.state.filterString.toLowerCase());\n        });\n        return matchesPlaylist || matchesSong;\n      }) : [];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.user.name, \"'s playlist\"), React.createElement(DownloadPlaylist, {\n        playlists: this.state.playlists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(PlaylistCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(HoursCounter, {\n        playlists: playlistsToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        onTextChange: function onTextChange(text) {\n          return _this3.setState({\n            filterString: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), playlistsToRender.map(function (playlist) {\n        return React.createElement(Playlist, {\n          playlist: playlist,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      })) : React.createElement(\"button\", {\n        onClick: function onClick() {\n          return window.location = 'http://localhost:8888/login';\n        },\n        style: {\n          'fontSize': '16px',\n          'padding': '16px 32px',\n          'backgroundColor': '#1CD156',\n          'marginTop': '64px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Sign In with Spotify\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js"],"names":["React","Component","DownloadPlaylist","Playlist","HoursCounter","Filter","PlaylistCounter","App","state","serverData","filterString","that","accessToken","URLSearchParams","window","location","search","get","fetch","headers","then","response","json","data","setState","user","name","display_name","i","fetchPlaylistTracks","setTimeout","playlistData","playlists","items","trackDataPromises","map","playlist","responsePromise","responsePromiseDetails","tracks","href","push","trackDataPromise","Promise","all","allTracksDataPromises","playlistsPromise","trackDatasArrays","trackDatas","index","trackDatasPushed","track","flatten","array","Array","isArray","concat","trackDatasFlatten","playlistTrackData","forEach","trackData","playlistSong","duration","duration_ms","console","log","item","songs","imageUrl","images","url","playlistsToRender","filter","matchesPlaylist","toLowerCase","includes","matchesSong","find","song","text"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,gBAAP,C,CAEA;;IAGMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAFY;AAMb;;;;wCAEmB;AAAA;;AAElB,UAAIC,IAAI,GAAG,IAAX;AAEA,UAAIC,WAAW,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgD,cAAhD,CAAlB;AACA,UAAI,CAACL,WAAL,EAAkB;AAElBM,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,OAAO,EAAE;AAAE,2BAAiB,YAAYP;AAA/B;AAD4B,OAAlC,CAAL,CAGGQ,IAHH,CAGQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAHhB,EAIGF,IAJH,CAIQ,UAAAG,IAAI,EAAI;AACZ,QAAA,MAAI,CAACC,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAEH,IAAI,CAACI;AADP;AADM,SAAd;AAKD,OAVH;AAYA,UAAIC,CAAC,GAAG,CAAR;;AACA,eAASC,mBAAT,GAA+B;AAC7BC,QAAAA,UAAU,CAAC,YAAY;AACrBZ,UAAAA,KAAK,qDAAqD;AACxDC,YAAAA,OAAO,EAAE;AAAE,+BAAiB,YAAYP;AAA/B;AAD+C,WAArD,CAAL,CAEGQ,IAFH,CAEQ,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WAFhB,EAGGF,IAHH,CAGQ,UAAAW,YAAY,EAAI;AACpB,gBAAIC,SAAS,GAAGD,YAAY,CAACE,KAA7B;AACA,gBAAIC,iBAAiB,GAAGF,SAAS,CAACG,GAAV,CAAc,UAAAC,QAAQ,EAAI;AAChD,kBAAIC,eAAe,GAAG,EAAtB;AACA,kBAAIC,sBAAsB,GAAGpB,KAAK,WAAIkB,QAAQ,CAACG,MAAT,CAAgBC,IAApB,qBAAmCZ,CAAnC,SAA0C;AAC1ET,gBAAAA,OAAO,EAAE;AAAE,mCAAiB,YAAYP;AAA/B;AADiE,eAA1C,CAAL,CAE1BQ,IAF0B,CAErB,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eAFa,CAA7B;AAGAe,cAAAA,eAAe,CAACI,IAAhB,CAAqBH,sBAArB,EALgD,CAKgB;AAChE;AACA;AACA;AACA;AACA;AACA;;AACA,kBAAII,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYP,eAAZ,CAAvB;AACA,qBAAOK,gBAAP;AACD,aAduB,CAAxB;AAeA,gBAAIG,qBAAqB,GACvBF,OAAO,CAACC,GAAR,CAAYV,iBAAZ,CADF;AAEA,gBAAIY,gBAAgB,GAAGD,qBAAqB,CAACzB,IAAtB,CAA2B,UAAA2B,gBAAgB,EAAI;AACpEA,cAAAA,gBAAgB,CAACZ,GAAjB,CAAqB,UAACa,UAAD,EAAaC,KAAb,EAAuB;AAC1C,oBAAIC,gBAAgB,GAAG,EAAvB;AACAF,gBAAAA,UAAU,CAACb,GAAX,CAAe,UAAAgB,KAAK,EAAI;AACtB,yBAAOD,gBAAgB,CAACT,IAAjB,CAAsBU,KAAK,CAAClB,KAA5B,CAAP;AACD,iBAFD;;AAGA,oBAAImB,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA;;AAAA,yBAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,IACnB,YAAGG,MAAH,gCAAaH,KAAK,CAAClB,GAAN,CAAUiB,OAAV,CAAb,EADmB,GAEnBC,KAFe;AAAA,iBAAnB;;AAGA,oBAAII,iBAAiB,GAAGL,OAAO,CAACF,gBAAD,CAA/B;AACA,oBAAIQ,iBAAiB,GAAG,EAAxB;AACAD,gBAAAA,iBAAiB,CAACE,OAAlB,CAA0B,UAACC,SAAD,EAAYhC,CAAZ,EAAkB;AAC1C,sBAAIiC,YAAY,GAAG;AACjBnC,oBAAAA,IAAI,EAAEkC,SAAS,CAACT,KAAV,CAAgBzB,IADL;AAEjBoC,oBAAAA,QAAQ,EAAEF,SAAS,CAACT,KAAV,CAAgBY,WAAhB,GAA8B;AAFvB,mBAAnB;AAIAL,kBAAAA,iBAAiB,CAACjB,IAAlB,CAAuBoB,YAAvB;AACD,iBAND;AAOA,uBAAO7B,SAAS,CAACiB,KAAD,CAAT,CAAiBD,UAAjB,GAA8BU,iBAArC;AACD,eAlBD;AAmBA,qBAAO1B,SAAP;AACD,aArBsB,CAAvB;AAsBA,mBAAOc,gBAAP;AACD,WA7CH,EA8CG1B,IA9CH,CA8CQ,UAAAY,SAAS,EAAI;AACjBgC,YAAAA,OAAO,CAACC,GAAR,CAAYjC,SAAZ;AACArB,YAAAA,IAAI,CAACa,QAAL,CAAc;AACZQ,cAAAA,SAAS,EAAEA,SAAS,CAACG,GAAV,CAAc,UAAA+B,IAAI,EAAI;AAC/B,uBAAO;AACLxC,kBAAAA,IAAI,EAAEwC,IAAI,CAACxC,IADN;AAELyC,kBAAAA,KAAK,EAAED,IAAI,CAAClB,UAFP;AAGLoB,kBAAAA,QAAQ,EAAEF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC;AAHpB,iBAAP;AAKD,eANU;AADC,aAAd;AAUD,WA1DH;AA2DA1C,UAAAA,CAAC;;AACD,cAAIA,CAAC,GAAG,CAAR,EAAW;AACTC,YAAAA,mBAAmB;AACpB;AACF,SAhES,EAgEP,IAhEO,CAAV;AAiED;;AACDA,MAAAA,mBAAmB;AAEpB;;;6BAEQ;AAAA;;AACPmC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzD,KAAL,CAAWwB,SAAvB;AACA,UAAIuC,iBAAiB,GACnB,KAAK/D,KAAL,CAAWiB,IAAX,IACE,KAAKjB,KAAL,CAAWwB,SADb,GAEI,KAAKxB,KAAL,CAAWwB,SAAX,CAAqBwC,MAArB,CAA4B,UAAApC,QAAQ,EAAI;AACxC,YAAIqC,eAAe,GAAGrC,QAAQ,CAACV,IAAT,CAAcgD,WAAd,GAA4BC,QAA5B,CACpB,MAAI,CAACnE,KAAL,CAAWE,YAAX,CAAwBgE,WAAxB,EADoB,CAAtB;AAEA,YAAIE,WAAW,GAAGxC,QAAQ,CAAC+B,KAAT,CAAeU,IAAf,CAAoB,UAAAC,IAAI;AAAA,iBACxCA,IAAI,CAACpD,IAAL,CAAUgD,WAAV,GAAwBC,QAAxB,CAAiC,MAAI,CAACnE,KAAL,CAAWE,YAAX,CAAwBgE,WAAxB,EAAjC,CADwC;AAAA,SAAxB,CAAlB;AAEA,eAAOD,eAAe,IAAIG,WAA1B;AACD,OANC,CAFJ,GAQO,EATT;AAUA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKpE,KAAL,CAAWiB,IAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKjB,KAAL,CAAWiB,IAAX,CAAgBC,IADnB,gBADF,EAIE,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWwB,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAEuC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEA,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,sBAAAQ,IAAI;AAAA,iBAAI,MAAI,CAACvD,QAAL,CAAc;AAAEd,YAAAA,YAAY,EAAEqE;AAAhB,WAAd,CAAJ;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQGR,iBAAiB,CAACpC,GAAlB,CAAsB,UAAAC,QAAQ;AAAA,eAC7B,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD6B;AAAA,OAA9B,CARH,CADD,GAaU;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMtB,MAAM,CAACC,QAAP,GAAkB,6BAAxB;AAAA,SAAjB;AACP,QAAA,KAAK,EAAE;AAAE,sBAAY,MAAd;AAAsB,qBAAW,WAAjC;AAA8C,6BAAmB,SAAjE;AAA4E,uBAAa;AAAzF,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAdb,CADF;AAoBD;;;;EApIed,S;;AAuIlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport Playlist from './Playlist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport '../css/App.css';\n\n// import querystring from 'query-string';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      filterString: ''\n    }\n  }\n\n  componentDidMount() {\n\n    let that = this;\n\n    let accessToken = new URLSearchParams(window.location.search).get('access_token');\n    if (!accessToken) return;\n\n    fetch('https://api.spotify.com/v1/me', {\n      headers: { 'Authorization': 'Bearer ' + accessToken }\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          user: {\n            name: data.display_name\n          }\n        })\n      })\n\n    let i = 0;\n    function fetchPlaylistTracks() {\n      setTimeout(function () {\n        fetch(`https://api.spotify.com/v1/me/playlists?limit=49`, {\n          headers: { 'Authorization': 'Bearer ' + accessToken }\n        }).then(response => response.json())\n          .then(playlistData => {\n            let playlists = playlistData.items\n            let trackDataPromises = playlists.map(playlist => {\n              let responsePromise = [];\n              let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${i}00`, {\n                headers: { 'Authorization': 'Bearer ' + accessToken }\n              }).then(response => response.json())\n              responsePromise.push(responsePromiseDetails);                   //  set your counter to 1\n              // [0, 1, 2].forEach(page => {\n              //   let responsePromiseDetails = fetch(`${playlist.tracks.href}?offset=${page}00`, {\n              //     headers: { 'Authorization': 'Bearer ' + accessToken }\n              //   }).then(response => response.json())\n              //   responsePromise.push(responsePromiseDetails)\n              // })\n              let trackDataPromise = Promise.all(responsePromise)\n              return trackDataPromise\n            })\n            let allTracksDataPromises =\n              Promise.all(trackDataPromises)\n            let playlistsPromise = allTracksDataPromises.then(trackDatasArrays => {\n              trackDatasArrays.map((trackDatas, index) => {\n                let trackDatasPushed = [];\n                trackDatas.map(track => {\n                  return trackDatasPushed.push(track.items)\n                })\n                let flatten = array => Array.isArray(array)\n                  ? [].concat(...array.map(flatten))\n                  : array\n                let trackDatasFlatten = flatten(trackDatasPushed)\n                let playlistTrackData = []\n                trackDatasFlatten.forEach((trackData, i) => {\n                  let playlistSong = {\n                    name: trackData.track.name,\n                    duration: trackData.track.duration_ms / 1000\n                  }\n                  playlistTrackData.push(playlistSong)\n                })\n                return playlists[index].trackDatas = playlistTrackData\n              })\n              return playlists\n            })\n            return playlistsPromise\n          })\n          .then(playlists => {\n            console.log(playlists)\n            that.setState({\n              playlists: playlists.map(item => {\n                return {\n                  name: item.name,\n                  songs: item.trackDatas,\n                  imageUrl: item.images[0].url\n                }\n              }\n              )\n            })\n          });\n        i++;\n        if (i < 5) {\n          fetchPlaylistTracks();\n        }\n      }, 6000)\n    }\n    fetchPlaylistTracks();\n\n  }\n\n  render() {\n    console.log(this.state.playlists)\n    let playlistsToRender =\n      this.state.user &&\n        this.state.playlists\n        ? this.state.playlists.filter(playlist => {\n          let matchesPlaylist = playlist.name.toLowerCase().includes(\n            this.state.filterString.toLowerCase())\n          let matchesSong = playlist.songs.find(song =>\n            song.name.toLowerCase().includes(this.state.filterString.toLowerCase()))\n          return matchesPlaylist || matchesSong\n        }) : []\n    return (\n      <div className=\"App\">\n        {this.state.user ?\n          <div>\n            <h1 >\n              {this.state.user.name}'s playlist\n            </h1>\n            <DownloadPlaylist playlists={this.state.playlists} />\n            <PlaylistCounter playlists={playlistsToRender} />\n            <HoursCounter playlists={playlistsToRender} />\n            <Filter onTextChange={text => this.setState({ filterString: text })} />\n            {playlistsToRender.map(playlist =>\n              <Playlist playlist={playlist} />\n            )}\n\n          </div> : <button onClick={() => window.location = 'http://localhost:8888/login'}\n            style={{ 'fontSize': '16px', 'padding': '16px 32px', 'backgroundColor': '#1CD156', 'marginTop': '64px' }}>Sign In with Spotify</button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}