{"ast":null,"code":"import _toConsumableArray from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/PlaylistPickerCards.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nvar spotifyApi = new SpotifyWebApi();\n\nvar PlaylistPickerCards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaylistPickerCards, _Component);\n\n  function PlaylistPickerCards(props) {\n    var _this;\n\n    _classCallCheck(this, PlaylistPickerCards);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaylistPickerCards).call(this, props));\n\n    _this.handleClick = function () {\n      _this.setState({\n        isSelected: !_this.state.isSelected\n      });\n\n      _this.props.selectPlaylist(_this.props.playlist);\n    };\n\n    _this.state = {\n      playlistGenres: []\n    };\n    return _this;\n  }\n\n  _createClass(PlaylistPickerCards, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      spotifyApi.setAccessToken(this.props.access_token);\n      this.props.playlist.songs.slice(0, 5).map(function (song) {\n        var artistId = song.artistUri.match(/[^:]*$/);\n        return spotifyApi.getArtist(artistId).then(function (response) {\n          var playlistGenres = _toConsumableArray(_this2.state.playlistGenres).concat([response.genres]);\n\n          _this2.setState({\n            playlistGenres: playlistGenres\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playlist = this.props.playlist;\n      var isSelected = this.props.selectedPlaylist === playlist ? true : false; // let genres = []\n      // let genres = this.state.playlistGenres.flat();\n\n      var genres = _toConsumableArray(new Set(this.state.playlistGenres.flat()));\n\n      console.log(genres);\n      return React.createElement(\"div\", {\n        onClick: this.handleClick,\n        className: isSelected ? \"playlist selected\" : \"playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: playlist.imageUrl,\n        alt: \"playlistImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, playlist.name), React.createElement(\"div\", {\n        className: \"playlist-genres\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.playlistGenres.map(function (genre, key) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, genre);\n      })), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, playlist.songs.slice(0, 3).map(function (song, key) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, song.name);\n      })), this.props.children);\n    }\n  }]);\n\n  return PlaylistPickerCards;\n}(Component);\n\nexport default PlaylistPickerCards;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/PlaylistPickerCards.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","PlaylistPickerCards","props","handleClick","setState","isSelected","state","selectPlaylist","playlist","playlistGenres","setAccessToken","access_token","songs","slice","map","song","artistId","artistUri","match","getArtist","then","response","genres","selectedPlaylist","Set","flat","console","log","imageUrl","name","genre","key","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\n\n\n\n\nclass PlaylistPickerCards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playlistGenres: []\n        }\n    }\n\n    handleClick = () => {\n        this.setState({ isSelected: !this.state.isSelected })\n        this.props.selectPlaylist(this.props.playlist)\n    }\n\n    componentDidMount() {\n\n        spotifyApi.setAccessToken(this.props.access_token)\n        this.props.playlist.songs.slice(0, 5).map(song => {\n            let artistId = song.artistUri.match(/[^:]*$/)\n            return spotifyApi.getArtist(artistId)\n                .then(response => {\n                    let playlistGenres = [...this.state.playlistGenres, response.genres]\n                    this.setState({ playlistGenres })\n                })\n        })\n    }\n\n    render() {\n        let playlist = this.props.playlist;\n        let isSelected = this.props.selectedPlaylist === playlist ? true : false\n        // let genres = []\n        // let genres = this.state.playlistGenres.flat();\n        let genres = [...new Set(this.state.playlistGenres.flat())]\n        console.log(genres)\n        return (\n            <div\n                onClick={this.handleClick}\n                className={isSelected ? \"playlist selected\" : \"playlist\"}\n            >\n                <img src={playlist.imageUrl} alt=\"playlistImage\" />\n                <h3>{playlist.name}</h3>\n                <div className=\"playlist-genres\">\n                    {this.state.playlistGenres.map((genre, key) =>\n                        <span>{genre}</span>\n                    )}\n                </div>\n                <ul>\n                    {playlist.songs.slice(0, 3).map((song, key) =>\n                        <li key={key}>{song.name}</li>\n                    )}\n                </ul>\n                {this.props.children}\n            </div>\n\n        )\n    }\n\n}\n\nexport default PlaylistPickerCards"]},"metadata":{},"sourceType":"module"}