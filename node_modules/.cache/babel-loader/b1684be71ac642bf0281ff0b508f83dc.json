{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/BlindtestGame.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport className from 'classnames'; // my components\n\nimport BlindtestSession from './BlindtestSession';\nimport PlaylistPicker from './PlaylistPicker';\nimport Header from './Header'; // css\n\nimport '../../css/BlindtestSession.css';\nimport '../../css/BlindtestGame.css';\nvar spotifyApi = new SpotifyWebApi();\n\nvar BlindtestGame =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlindtestGame, _Component);\n\n  function BlindtestGame() {\n    var _this;\n\n    _classCallCheck(this, BlindtestGame);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlindtestGame).call(this));\n\n    _this.returnHome = function () {\n      _this.props.history.push(\"/\");\n    };\n\n    _this.startGame = function () {\n      var gameStarted = !_this.state.gameStarted;\n\n      if (_this.state.playlistSelected) {\n        var uri = {\n          \"context_uri\": _this.state.playlistSelected.uri\n        };\n        spotifyApi.play(uri).catch(function () {\n          localStorage.clear();\n\n          _this.props.history.push(\"/\");\n        });\n      }\n\n      _this.props.history.push(\"/blindtest\");\n\n      _this.setState({\n        gameStarted: gameStarted\n      });\n    };\n\n    _this.endGame = function () {\n      var gameStarted = _this.state.gameStarted;\n      gameStarted = false;\n\n      _this.setState({\n        gameStarted: gameStarted\n      });\n    };\n\n    _this.selectPlaylist = function (playlist) {\n      _this.setState({\n        playlistSelected: playlist\n      });\n    };\n\n    _this.state = {\n      gameStarted: false,\n      score: 0\n    };\n    return _this;\n  }\n\n  _createClass(BlindtestGame, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      spotifyApi.setAccessToken(this.props.access_token);\n      this.props.history.push(\"/\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var blindestGameClass = className({\n        selectPlaylist: true,\n        hidden: this.state.gameStarted\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"playlistPicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Header, {\n        user: this.props.data.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: blindestGameClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(PlaylistPicker, {\n        selectPlaylist: this.selectPlaylist,\n        access_token: this.props.access_token,\n        data: this.props.data,\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), this.state.playlistSelected && React.createElement(\"div\", {\n        className: \"game\",\n        onClick: this.state.gameStarted ? this.endGame : this.startGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.gameStarted ? React.createElement(\"p\", {\n        className: \"game-cta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Arr\\xEAter la partie en cours\") : React.createElement(\"p\", {\n        className: \"game-cta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"commencer le blindtest avec la playlist \", this.state.playlistSelected.name))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.gameStarted && React.createElement(BlindtestSession, {\n        access_token: this.props.access_token,\n        gameStarted: this.state.gameStarted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BlindtestGame;\n}(Component);\n\nexport default BlindtestGame;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/BlindtestGame.js"],"names":["React","Component","SpotifyWebApi","className","BlindtestSession","PlaylistPicker","Header","spotifyApi","BlindtestGame","returnHome","props","history","push","startGame","gameStarted","state","playlistSelected","uri","play","catch","localStorage","clear","setState","endGame","selectPlaylist","playlist","score","setAccessToken","access_token","blindestGameClass","hidden","data","user","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport className from 'classnames';\n\n// my components\n\nimport BlindtestSession from './BlindtestSession'\nimport PlaylistPicker from './PlaylistPicker'\nimport Header from './Header'\n\n\n// css\nimport '../../css/BlindtestSession.css';\nimport '../../css/BlindtestGame.css'\n\n\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass BlindtestGame extends Component {\n    constructor() {\n        super()\n        this.state = {\n            gameStarted: false,\n            score: 0\n        }\n    }\n\n    returnHome = () => {\n        this.props.history.push(`/`)\n    }\n\n    startGame = () => {\n        let gameStarted = !this.state.gameStarted\n        if (this.state.playlistSelected) {\n            const uri = {\n                \"context_uri\": this.state.playlistSelected.uri,\n            }\n            spotifyApi.play(uri).catch(() => {\n                localStorage.clear()\n                this.props.history.push(`/`)\n            })\n        }\n        this.props.history.push(`/blindtest`)\n        this.setState({ gameStarted })\n    }\n\n    endGame = () => {\n        let gameStarted = this.state.gameStarted\n        gameStarted = false\n        this.setState({ gameStarted })\n    }\n\n    selectPlaylist = (playlist) => {\n        this.setState({ playlistSelected: playlist })\n    }\n\n    componentDidMount() {\n        spotifyApi.setAccessToken(this.props.access_token)\n\n        this.props.history.push(`/`)\n    }\n\n    render() {\n        var blindestGameClass = className({\n            selectPlaylist: true,\n            hidden: this.state.gameStarted\n        })\n        return (\n            <div>\n                <div className=\"playlistPicker\">\n\n                    <Header user={this.props.data.user} />\n                    <div className={blindestGameClass}>\n                        <PlaylistPicker\n                            selectPlaylist={this.selectPlaylist}\n                            access_token={this.props.access_token}\n                            data={this.props.data}\n                            history={this.props.history}\n                        />\n                    </div>\n                    {this.state.playlistSelected &&\n                        <div\n                            className=\"game\"\n                            onClick={this.state.gameStarted ? this.endGame : this.startGame}\n                        >\n                            {this.state.gameStarted\n                                ? <p className=\"game-cta\">Arrêter la partie en cours</p>\n                                : <p className=\"game-cta\">commencer le blindtest avec la playlist {this.state.playlistSelected.name}</p>\n                            }\n                        </div>\n                    }\n                </div>\n                <div>\n                    {this.state.gameStarted &&\n                        <BlindtestSession\n                            access_token={this.props.access_token}\n                            gameStarted={this.state.gameStarted}\n                        />\n                    }\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default BlindtestGame;"]},"metadata":{},"sourceType":"module"}