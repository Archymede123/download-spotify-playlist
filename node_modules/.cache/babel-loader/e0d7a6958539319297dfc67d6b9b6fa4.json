{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/Countdown.js\";\nimport React, { Component } from 'react';\n\nvar Countdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countdown, _Component);\n\n  function Countdown(props) {\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Countdown).call(this, props));\n\n    _this.startCountdown = function () {\n      _this.interval = setInterval(function () {\n        var timeToGuess = _this.state.timeToGuess;\n        timeToGuess -= 1;\n\n        _this.setState({\n          timeToGuess: timeToGuess\n        });\n\n        if (timeToGuess < 1) {\n          clearInterval(_this.interval);\n\n          _this.props.restartCountdown();\n        }\n      }, 1000);\n    };\n\n    var _timeToGuess = _this.props.timeToGuess;\n    _this.state = {\n      timeToGuess: _timeToGuess\n    };\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startCountdown();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"You have \", this.state.timeToGuess, \" left, hurry up motherfucker\");\n    }\n  }]);\n\n  return Countdown;\n}(Component);\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/blindtest/Countdown.js"],"names":["React","Component","Countdown","props","startCountdown","interval","setInterval","timeToGuess","state","setState","clearInterval","restartCountdown"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UAQnBC,cARmB,GAQF,YAAM;AACnB,YAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAC9B,YAAIC,WAAW,GAAG,MAAKC,KAAL,CAAWD,WAA7B;AACAA,QAAAA,WAAW,IAAI,CAAf;;AACA,cAAKE,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAXA;AAAF,SAAd;;AACA,YAAIA,WAAW,GAAG,CAAlB,EAAqB;AACjBG,UAAAA,aAAa,CAAC,MAAKL,QAAN,CAAb;;AACA,gBAAKF,KAAL,CAAWQ,gBAAX;AACH;AACJ,OAR0B,EAQxB,IARwB,CAA3B;AASH,KAlBkB;;AAEf,QAAIJ,YAAW,GAAG,MAAKJ,KAAL,CAAWI,WAA7B;AACA,UAAKC,KAAL,GAAa;AACTD,MAAAA,WAAW,EAAXA;AADS,KAAb;AAHe;AAMlB;;;;wCAcmB;AAChB,WAAKH,cAAL;AACH;;;2CAGsB;AACnBM,MAAAA,aAAa,CAAC,KAAKL,QAAN,CAAb;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa,KAAKG,KAAL,CAAWD,WAAxB,iCADJ;AAGH;;;;EAlCmBN,S;;AAqCxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Countdown extends Component {\n    constructor(props) {\n        super(props);\n        let timeToGuess = this.props.timeToGuess\n        this.state = {\n            timeToGuess\n        }\n    }\n\n    startCountdown = () => {\n        this.interval = setInterval(() => {\n            let timeToGuess = this.state.timeToGuess\n            timeToGuess -= 1\n            this.setState({ timeToGuess })\n            if (timeToGuess < 1) {\n                clearInterval(this.interval)\n                this.props.restartCountdown()\n            }\n        }, 1000)\n    }\n\n    componentDidMount() {\n        this.startCountdown()\n    }\n\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    render() {\n        return (\n            <p>You have {this.state.timeToGuess} left, hurry up motherfucker</p>\n        );\n    }\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}