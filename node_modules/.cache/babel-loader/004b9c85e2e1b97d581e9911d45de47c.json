{"ast":null,"code":"import _classCallCheck from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js\";\n//packages\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; // components \n\nimport PlaylistsListing from './PlaylistsListing';\nimport DownloadPlaylist from './DownloadPlaylist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport LoginPage from './LoginPage';\nimport PlaylistPage from './PlaylistPage'; // css\n\nimport '../css/App.css'; // import querystring from 'query-string';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadSpotifyData = function (data) {\n      _this.setState({\n        playlists: data.playlists,\n        user: data.user\n      });\n    };\n\n    _this.addTag = function (index, tag) {\n      var playlists = _this.state.playlists;\n      playlists[index].tags ? playlists[index].tags.push(tag) : playlists[index].tags = [tag];\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.addPlaylistRating = function (index, rating) {\n      var playlists = _this.state.playlists;\n      playlists.find(function (playlist) {\n        return playlist.index === index;\n      }).rating = rating;\n      console.log(playlists);\n\n      _this.setState({\n        playlists: playlists\n      });\n    };\n\n    _this.updateFilteredRating = function (rating) {\n      var filterRating = _this.state.filterRating;\n      filterRating = rating;\n\n      _this.setState({\n        filterRating: filterRating\n      });\n    };\n\n    _this.resetRateFiltering = function (event) {\n      _this.setState({\n        filterRating: 0\n      });\n    };\n\n    _this.state = {\n      serverData: {},\n      filterString: '',\n      filterRating: 0\n    };\n    _this.resetRateFiltering = _this.resetRateFiltering.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addPlaylistRating = _this.addPlaylistRating.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var localStorageUserRef = localStorage.getItem('user');\n\n      if (localStorageUserRef) {\n        this.setState({\n          user: JSON.parse(localStorageUserRef)\n        });\n      }\n\n      var localStoragePlaylistsRef = localStorage.getItem('playlists');\n\n      if (localStoragePlaylistsRef) {\n        this.setState({\n          playlists: JSON.parse(localStoragePlaylistsRef)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(\"user\", JSON.stringify(this.state.user));\n      localStorage.setItem(\"playlists\", JSON.stringify(this.state.playlists));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(PlaylistsListing, Object.assign({}, props, {\n            data: _this2.state,\n            addTag: _this2.addTag,\n            addPlaylistRating: _this2.addPlaylistRating,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/:playlistId\",\n        render: function render(props) {\n          return React.createElement(PlaylistPage, Object.assign({}, props, {\n            playlists: _this2.state.playlists,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })))) : React.createElement(LoginPage, {\n        loadSpotifyData: this.loadSpotifyData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/timotheereynaud/code/Archymede123/better-playlists-tuto/download-spotify-playlist/src/components/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","PlaylistsListing","DownloadPlaylist","HoursCounter","Filter","PlaylistCounter","LoginPage","PlaylistPage","App","loadSpotifyData","data","setState","playlists","user","addTag","index","tag","state","tags","push","addPlaylistRating","rating","find","playlist","console","log","updateFilteredRating","filterRating","resetRateFiltering","event","serverData","filterString","bind","localStorageUserRef","localStorage","getItem","JSON","parse","localStoragePlaylistsRef","setItem","stringify","props"],"mappings":"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","sourcesContent":["//packages\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// components \nimport PlaylistsListing from './PlaylistsListing'\nimport DownloadPlaylist from './DownloadPlaylist';\nimport HoursCounter from './HoursCounter.js';\nimport Filter from './Filter';\nimport PlaylistCounter from './PlaylistCounter';\nimport LoginPage from './LoginPage';\nimport PlaylistPage from './PlaylistPage';\n\n// css\nimport '../css/App.css';\n\n// import querystring from 'query-string';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      filterString: '',\n      filterRating: 0,\n    }\n\n    this.resetRateFiltering = this.resetRateFiltering.bind(this);\n    this.addPlaylistRating = this.addPlaylistRating.bind(this);\n  }\n\n  loadSpotifyData = (data) => {\n    this.setState({\n      playlists: data.playlists,\n      user: data.user\n    })\n  }\n\n  addTag = (index, tag) => {\n    let playlists = this.state.playlists\n    playlists[index].tags ? playlists[index].tags.push(tag)\n      : playlists[index].tags = [tag]\n    this.setState({ playlists })\n  }\n\n  addPlaylistRating = (index, rating) => {\n    let playlists = this.state.playlists\n    playlists.find(playlist => playlist.index === index).rating = rating\n    console.log(playlists)\n    this.setState({ playlists })\n  }\n\n  updateFilteredRating = (rating) => {\n    let filterRating = this.state.filterRating\n    filterRating = rating\n    this.setState({ filterRating })\n  }\n\n  resetRateFiltering = (event) => {\n    this.setState({ filterRating: 0 })\n  }\n\n  componentDidMount() {\n    const localStorageUserRef = localStorage.getItem('user')\n\n    if (localStorageUserRef) {\n      this.setState({ user: JSON.parse(localStorageUserRef) })\n    }\n\n    const localStoragePlaylistsRef = localStorage.getItem('playlists')\n    if (localStoragePlaylistsRef) {\n      this.setState({ playlists: JSON.parse(localStoragePlaylistsRef) })\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      \"user\",\n      JSON.stringify(this.state.user))\n\n    localStorage.setItem(\n      \"playlists\",\n      JSON.stringify(this.state.playlists))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.user ?\n          <div>\n            <BrowserRouter>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={(props) => <PlaylistsListing {...props}\n                    data={this.state}\n                    addTag={this.addTag}\n                    addPlaylistRating={this.addPlaylistRating}\n                  />}\n                />\n                <Route\n                  exact\n                  path=\"/:playlistId\"\n                  render={(props) => <PlaylistPage {...props} playlists={this.state.playlists} />}\n                />\n              </Switch>\n            </BrowserRouter>\n          </div> : <LoginPage loadSpotifyData={this.loadSpotifyData} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}